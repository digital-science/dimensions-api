{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "Collapsed": "false",
    "colab_type": "text",
    "id": "8XNB2EeXR4DA"
   },
   "source": [
    "# The Dimcli Python library: Working with Pandas Dataframes\n",
    "\n",
    "[Dimcli](https://github.com/lambdamusic/dimcli) includes a few utilities that make it easier to transform Dimensions JSON data into Pandas [dataframe objects](https://pandas.pydata.org/pandas-docs/stable/getting_started/dsintro.html#dataframe). \n",
    "\n",
    "Dataframes are then easy to sort, analyse, export as CSV and use within visualisation softwares.\n",
    "\n",
    ">  [pandas](https://pandas.pydata.org/pandas-docs/stable/) is a popular software library written for the Python programming language for data manipulation and analysis.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "==\n",
      "CHANGELOG\n",
      "This notebook was last run on Jan 24, 2022\n",
      "==\n"
     ]
    }
   ],
   "source": [
    "import datetime\n",
    "print(\"==\\nCHANGELOG\\nThis notebook was last run on %s\\n==\" % datetime.date.today().strftime('%b %d, %Y'))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "Collapsed": "false",
    "colab_type": "text",
    "id": "hMaQlB7DG8Vw"
   },
   "source": [
    "## Prerequisites\n",
    "\n",
    "This notebook assumes you have installed the [Dimcli](https://pypi.org/project/dimcli/) library and are familiar with the ['Getting Started' tutorial](https://api-lab.dimensions.ai/cookbooks/1-getting-started/1-Using-the-Dimcli-library-to-query-the-API.html)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "Collapsed": "false"
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\u001b[2mSearching config file credentials for 'https://app.dimensions.ai' endpoint..\u001b[0m\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "==\n",
      "Logging in..\n",
      "\u001b[2mDimcli - Dimensions API Client (v0.9.6)\u001b[0m\n",
      "\u001b[2mConnected to: <https://app.dimensions.ai/api/dsl> - DSL v2.0\u001b[0m\n",
      "\u001b[2mMethod: dsl.ini file\u001b[0m\n"
     ]
    }
   ],
   "source": [
    "!pip install dimcli --quiet \n",
    "\n",
    "import dimcli\n",
    "from dimcli.utils import *\n",
    "import json\n",
    "import sys\n",
    "import pandas as pd\n",
    "#\n",
    "\n",
    "print(\"==\\nLogging in..\")\n",
    "# https://digital-science.github.io/dimcli/getting-started.html#authentication\n",
    "ENDPOINT = \"https://app.dimensions.ai\"\n",
    "if 'google.colab' in sys.modules:\n",
    "  import getpass\n",
    "  KEY = getpass.getpass(prompt='API Key: ')  \n",
    "  dimcli.login(key=KEY, endpoint=ENDPOINT)\n",
    "else:\n",
    "  KEY = \"\"\n",
    "  dimcli.login(key=KEY, endpoint=ENDPOINT)\n",
    "dsl = dimcli.Dsl()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "Collapsed": "false",
    "colab_type": "text",
    "id": "oMLG9WL0R4DE"
   },
   "source": [
    "## 1. General method to transform JSON query results into a dataframe \n",
    "\n",
    "The `DslDataset.as_dataframe` method allows to quickly turn any query results into a dataframe. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "Collapsed": "false",
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 34
    },
    "colab_type": "code",
    "executionInfo": {
     "elapsed": 3008,
     "status": "ok",
     "timestamp": 1574681077688,
     "user": {
      "displayName": "Michele Pasin",
      "photoUrl": "https://lh3.googleusercontent.com/a-/AAuE7mBu8LVjIGgontF2Wax51BoL5KFx8esezX3bUmaa0g=s64",
      "userId": "10309320684375994511"
     },
     "user_tz": 0
    },
    "id": "19qgos2dR4DF",
    "outputId": "a4bdf8a3-a760-4b80-cb1d-fb89b6cf08ca"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Returned Publications: 1000 (total = 484143)\n",
      "\u001b[2mTime: 4.79s\u001b[0m\n"
     ]
    }
   ],
   "source": [
    "# we'll reuse this query later on \n",
    "query = \"\"\"search publications for \"graphene\" \n",
    "            where year in [2013:2019] \n",
    "            return publications[id+type+volume+year+issue+title+journal+authors] sort by times_cited limit 1000\"\"\"\n",
    "res = dsl.query(query)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "Collapsed": "false",
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 1000
    },
    "colab_type": "code",
    "executionInfo": {
     "elapsed": 1346,
     "status": "ok",
     "timestamp": 1574681079469,
     "user": {
      "displayName": "Michele Pasin",
      "photoUrl": "https://lh3.googleusercontent.com/a-/AAuE7mBu8LVjIGgontF2Wax51BoL5KFx8esezX3bUmaa0g=s64",
      "userId": "10309320684375994511"
     },
     "user_tz": 0
    },
    "id": "6LCGKJPwR4DG",
    "outputId": "b0b6e7e6-10de-4a17-e037-33083352fc8f"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>authors</th>\n",
       "      <th>id</th>\n",
       "      <th>issue</th>\n",
       "      <th>title</th>\n",
       "      <th>type</th>\n",
       "      <th>volume</th>\n",
       "      <th>year</th>\n",
       "      <th>journal.id</th>\n",
       "      <th>journal.title</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>[{'affiliations': [{'city': 'New Brunswick', '...</td>\n",
       "      <td>pub.1050119463</td>\n",
       "      <td>4</td>\n",
       "      <td>The chemistry of two-dimensional layered trans...</td>\n",
       "      <td>article</td>\n",
       "      <td>5</td>\n",
       "      <td>2013</td>\n",
       "      <td>jour.1041224</td>\n",
       "      <td>Nature Chemistry</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>[{'affiliations': [{'city': 'Manchester', 'cit...</td>\n",
       "      <td>pub.1024857999</td>\n",
       "      <td>7459</td>\n",
       "      <td>Van der Waals heterostructures</td>\n",
       "      <td>article</td>\n",
       "      <td>499</td>\n",
       "      <td>2013</td>\n",
       "      <td>jour.1018957</td>\n",
       "      <td>Nature</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>[{'affiliations': [{'city': 'Shanghai', 'city_...</td>\n",
       "      <td>pub.1032956475</td>\n",
       "      <td>5</td>\n",
       "      <td>Black phosphorus field-effect transistors</td>\n",
       "      <td>article</td>\n",
       "      <td>9</td>\n",
       "      <td>2014</td>\n",
       "      <td>jour.1037429</td>\n",
       "      <td>Nature Nanotechnology</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>[{'affiliations': [{'city': 'Austin', 'city_id...</td>\n",
       "      <td>pub.1019126274</td>\n",
       "      <td>4</td>\n",
       "      <td>The Li-Ion Rechargeable Battery: A Perspective</td>\n",
       "      <td>article</td>\n",
       "      <td>135</td>\n",
       "      <td>2013</td>\n",
       "      <td>jour.1081898</td>\n",
       "      <td>Journal of the American Chemical Society</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>[{'affiliations': [{'city': 'Los Angeles', 'ci...</td>\n",
       "      <td>pub.1004394295</td>\n",
       "      <td>6196</td>\n",
       "      <td>Interface engineering of highly efficient pero...</td>\n",
       "      <td>article</td>\n",
       "      <td>345</td>\n",
       "      <td>2014</td>\n",
       "      <td>jour.1346339</td>\n",
       "      <td>Science</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>[{'affiliations': [{'city': 'Stanford', 'city_...</td>\n",
       "      <td>pub.1007330696</td>\n",
       "      <td>6321</td>\n",
       "      <td>Combining theory and experiment in electrocata...</td>\n",
       "      <td>article</td>\n",
       "      <td>355</td>\n",
       "      <td>2017</td>\n",
       "      <td>jour.1346339</td>\n",
       "      <td>Science</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>[{'affiliations': [{'city': 'Nanshan', 'city_i...</td>\n",
       "      <td>pub.1055085164</td>\n",
       "      <td>21</td>\n",
       "      <td>Aggregation-Induced Emission: Together We Shin...</td>\n",
       "      <td>article</td>\n",
       "      <td>115</td>\n",
       "      <td>2015</td>\n",
       "      <td>jour.1077147</td>\n",
       "      <td>Chemical Reviews</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>[{'affiliations': [], 'corresponding': '', 'cu...</td>\n",
       "      <td>pub.1009826879</td>\n",
       "      <td>4</td>\n",
       "      <td>Phosphorene: An Unexplored 2D Semiconductor wi...</td>\n",
       "      <td>article</td>\n",
       "      <td>8</td>\n",
       "      <td>2014</td>\n",
       "      <td>jour.1038917</td>\n",
       "      <td>ACS Nano</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>[{'affiliations': [{'city': 'Sydney', 'city_id...</td>\n",
       "      <td>pub.1045181228</td>\n",
       "      <td>7</td>\n",
       "      <td>The emergence of perovskite solar cells</td>\n",
       "      <td>article</td>\n",
       "      <td>8</td>\n",
       "      <td>2014</td>\n",
       "      <td>jour.1037430</td>\n",
       "      <td>Nature Photonics</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>[{'affiliations': [{'city': 'Cambridge', 'city...</td>\n",
       "      <td>pub.1015305822</td>\n",
       "      <td>4</td>\n",
       "      <td>Raman spectroscopy as a versatile tool for stu...</td>\n",
       "      <td>article</td>\n",
       "      <td>8</td>\n",
       "      <td>2013</td>\n",
       "      <td>jour.1037429</td>\n",
       "      <td>Nature Nanotechnology</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                             authors              id issue  \\\n",
       "0  [{'affiliations': [{'city': 'New Brunswick', '...  pub.1050119463     4   \n",
       "1  [{'affiliations': [{'city': 'Manchester', 'cit...  pub.1024857999  7459   \n",
       "2  [{'affiliations': [{'city': 'Shanghai', 'city_...  pub.1032956475     5   \n",
       "3  [{'affiliations': [{'city': 'Austin', 'city_id...  pub.1019126274     4   \n",
       "4  [{'affiliations': [{'city': 'Los Angeles', 'ci...  pub.1004394295  6196   \n",
       "5  [{'affiliations': [{'city': 'Stanford', 'city_...  pub.1007330696  6321   \n",
       "6  [{'affiliations': [{'city': 'Nanshan', 'city_i...  pub.1055085164    21   \n",
       "7  [{'affiliations': [], 'corresponding': '', 'cu...  pub.1009826879     4   \n",
       "8  [{'affiliations': [{'city': 'Sydney', 'city_id...  pub.1045181228     7   \n",
       "9  [{'affiliations': [{'city': 'Cambridge', 'city...  pub.1015305822     4   \n",
       "\n",
       "                                               title     type volume  year  \\\n",
       "0  The chemistry of two-dimensional layered trans...  article      5  2013   \n",
       "1                     Van der Waals heterostructures  article    499  2013   \n",
       "2          Black phosphorus field-effect transistors  article      9  2014   \n",
       "3     The Li-Ion Rechargeable Battery: A Perspective  article    135  2013   \n",
       "4  Interface engineering of highly efficient pero...  article    345  2014   \n",
       "5  Combining theory and experiment in electrocata...  article    355  2017   \n",
       "6  Aggregation-Induced Emission: Together We Shin...  article    115  2015   \n",
       "7  Phosphorene: An Unexplored 2D Semiconductor wi...  article      8  2014   \n",
       "8            The emergence of perovskite solar cells  article      8  2014   \n",
       "9  Raman spectroscopy as a versatile tool for stu...  article      8  2013   \n",
       "\n",
       "     journal.id                             journal.title  \n",
       "0  jour.1041224                          Nature Chemistry  \n",
       "1  jour.1018957                                    Nature  \n",
       "2  jour.1037429                     Nature Nanotechnology  \n",
       "3  jour.1081898  Journal of the American Chemical Society  \n",
       "4  jour.1346339                                   Science  \n",
       "5  jour.1346339                                   Science  \n",
       "6  jour.1077147                          Chemical Reviews  \n",
       "7  jour.1038917                                  ACS Nano  \n",
       "8  jour.1037430                          Nature Photonics  \n",
       "9  jour.1037429                     Nature Nanotechnology  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = res.as_dataframe()\n",
    "df.head(10)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "Collapsed": "false",
    "colab_type": "text",
    "id": "tCq1lF6HR4DI"
   },
   "source": [
    "Pandas dataframes offer a myriad of utilities for inspecting data. Check out the [official docs](https://pandas.pydata.org/pandas-docs/stable/getting_started/10min.html) or google a [pandas tutorial](https://www.google.com/search?q=pandas+tutorial) to lean more about it. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "Collapsed": "false",
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 34
    },
    "colab_type": "code",
    "executionInfo": {
     "elapsed": 1124,
     "status": "ok",
     "timestamp": 1574681118435,
     "user": {
      "displayName": "Michele Pasin",
      "photoUrl": "https://lh3.googleusercontent.com/a-/AAuE7mBu8LVjIGgontF2Wax51BoL5KFx8esezX3bUmaa0g=s64",
      "userId": "10309320684375994511"
     },
     "user_tz": 0
    },
    "id": "k_3GoeDkR4DJ",
    "outputId": "04323988-d055-4928-80f9-b283b34c8328"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1000, 9)"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# the table shape\n",
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "Collapsed": "false",
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 136
    },
    "colab_type": "code",
    "executionInfo": {
     "elapsed": 929,
     "status": "ok",
     "timestamp": 1574681130276,
     "user": {
      "displayName": "Michele Pasin",
      "photoUrl": "https://lh3.googleusercontent.com/a-/AAuE7mBu8LVjIGgontF2Wax51BoL5KFx8esezX3bUmaa0g=s64",
      "userId": "10309320684375994511"
     },
     "user_tz": 0
    },
    "id": "CjvMBNCBR4DK",
    "outputId": "771e011c-1a06-43d4-a12c-851e9edacce0"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2014    256\n",
       "2013    236\n",
       "2015    192\n",
       "2016    151\n",
       "2017     99\n",
       "2018     50\n",
       "2019     16\n",
       "Name: year, dtype: int64"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# the 'value_counts' method returns the distribution of a specific field eg publication [years]\n",
    "df['year'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "Collapsed": "false",
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 102
    },
    "colab_type": "code",
    "executionInfo": {
     "elapsed": 817,
     "status": "ok",
     "timestamp": 1574681132393,
     "user": {
      "displayName": "Michele Pasin",
      "photoUrl": "https://lh3.googleusercontent.com/a-/AAuE7mBu8LVjIGgontF2Wax51BoL5KFx8esezX3bUmaa0g=s64",
      "userId": "10309320684375994511"
     },
     "user_tz": 0
    },
    "id": "vndAnGmyR4DM",
    "outputId": "68301915-01d4-46fc-ddb2-5fa23f768e3f"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "article      996\n",
       "book           2\n",
       "monograph      2\n",
       "Name: type, dtype: int64"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# eg distribution of publication [type]\n",
    "df['type'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "Collapsed": "false",
    "colab_type": "text",
    "id": "ye1VswB3R4DO"
   },
   "source": [
    "## 2. Dataframe Methods for 'Publications' queries\n",
    "\n",
    "What follows are specialized versions of the `as_dataframe` method for results sets composed of publication records. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "Collapsed": "false",
    "colab_type": "text",
    "id": "j75inlUMR4DO"
   },
   "source": [
    "###  Extracting authors: `as_dataframe_authors`\n",
    "\n",
    "Publications authors are usually returned by the Dimensions API inside a nested JSON object in the `authors_affiliations` sub-key. \n",
    "\n",
    "> Note: the order of authors in the JSON is consistent with the ordering of authors in the original publication\n",
    "\n",
    "This methods allows to quickly extract that data and return a dataframe with **one row per author**."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "Collapsed": "false",
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 1000
    },
    "colab_type": "code",
    "executionInfo": {
     "elapsed": 940,
     "status": "ok",
     "timestamp": 1574681159951,
     "user": {
      "displayName": "Michele Pasin",
      "photoUrl": "https://lh3.googleusercontent.com/a-/AAuE7mBu8LVjIGgontF2Wax51BoL5KFx8esezX3bUmaa0g=s64",
      "userId": "10309320684375994511"
     },
     "user_tz": 0
    },
    "id": "0_KbE4ylR4DP",
    "outputId": "d5ad1426-b64b-4b64-d76f-6c1fb05348d7"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>affiliations</th>\n",
       "      <th>corresponding</th>\n",
       "      <th>current_organization_id</th>\n",
       "      <th>first_name</th>\n",
       "      <th>last_name</th>\n",
       "      <th>orcid</th>\n",
       "      <th>raw_affiliation</th>\n",
       "      <th>researcher_id</th>\n",
       "      <th>pub_id</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>[{'city': 'New Brunswick', 'city_id': 5101717,...</td>\n",
       "      <td>True</td>\n",
       "      <td>grid.5335.0</td>\n",
       "      <td>Manish</td>\n",
       "      <td>Chhowalla</td>\n",
       "      <td>None</td>\n",
       "      <td>[Materials Science and Engineering, Rutgers Un...</td>\n",
       "      <td>ur.0633062306.03</td>\n",
       "      <td>pub.1050119463</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>[{'city': 'Ulsan', 'city_id': 1833747, 'countr...</td>\n",
       "      <td></td>\n",
       "      <td>grid.42687.3f</td>\n",
       "      <td>Hyeon Suk</td>\n",
       "      <td>Shin</td>\n",
       "      <td>None</td>\n",
       "      <td>[Interdisciplinary School of Green Energy and ...</td>\n",
       "      <td>ur.07617630407.83</td>\n",
       "      <td>pub.1050119463</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>[{'city': 'Singapore', 'city_id': 1880252, 'co...</td>\n",
       "      <td></td>\n",
       "      <td>grid.4280.e</td>\n",
       "      <td>Goki</td>\n",
       "      <td>Eda</td>\n",
       "      <td>None</td>\n",
       "      <td>[Department of Physics, National University of...</td>\n",
       "      <td>ur.01150450507.27</td>\n",
       "      <td>pub.1050119463</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>[{'city': 'Taipei', 'city_id': 1668341, 'count...</td>\n",
       "      <td></td>\n",
       "      <td>grid.45672.32</td>\n",
       "      <td>Lain-Jong</td>\n",
       "      <td>Li</td>\n",
       "      <td>[0000-0002-4059-7783]</td>\n",
       "      <td>[Institute of Atomic and Molecular Sciences, A...</td>\n",
       "      <td>ur.01313340113.13</td>\n",
       "      <td>pub.1050119463</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>[{'city': 'Singapore', 'city_id': 1880252, 'co...</td>\n",
       "      <td></td>\n",
       "      <td>grid.4280.e</td>\n",
       "      <td>Kian Ping</td>\n",
       "      <td>Loh</td>\n",
       "      <td>[0000-0002-1491-743X]</td>\n",
       "      <td>[Department of Chemistry, National University ...</td>\n",
       "      <td>ur.0752174033.73</td>\n",
       "      <td>pub.1050119463</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                        affiliations corresponding  \\\n",
       "0  [{'city': 'New Brunswick', 'city_id': 5101717,...          True   \n",
       "1  [{'city': 'Ulsan', 'city_id': 1833747, 'countr...                 \n",
       "2  [{'city': 'Singapore', 'city_id': 1880252, 'co...                 \n",
       "3  [{'city': 'Taipei', 'city_id': 1668341, 'count...                 \n",
       "4  [{'city': 'Singapore', 'city_id': 1880252, 'co...                 \n",
       "\n",
       "  current_organization_id first_name  last_name                  orcid  \\\n",
       "0             grid.5335.0     Manish  Chhowalla                   None   \n",
       "1           grid.42687.3f  Hyeon Suk       Shin                   None   \n",
       "2             grid.4280.e       Goki        Eda                   None   \n",
       "3           grid.45672.32  Lain-Jong         Li  [0000-0002-4059-7783]   \n",
       "4             grid.4280.e  Kian Ping        Loh  [0000-0002-1491-743X]   \n",
       "\n",
       "                                     raw_affiliation      researcher_id  \\\n",
       "0  [Materials Science and Engineering, Rutgers Un...   ur.0633062306.03   \n",
       "1  [Interdisciplinary School of Green Energy and ...  ur.07617630407.83   \n",
       "2  [Department of Physics, National University of...  ur.01150450507.27   \n",
       "3  [Institute of Atomic and Molecular Sciences, A...  ur.01313340113.13   \n",
       "4  [Department of Chemistry, National University ...   ur.0752174033.73   \n",
       "\n",
       "           pub_id  \n",
       "0  pub.1050119463  \n",
       "1  pub.1050119463  \n",
       "2  pub.1050119463  \n",
       "3  pub.1050119463  \n",
       "4  pub.1050119463  "
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "authors = res.as_dataframe_authors()\n",
    "authors.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "Collapsed": "false",
    "colab_type": "text",
    "id": "N1VtHVQbR4DQ"
   },
   "source": [
    "Using the authors dataframe, we can easily get the top ten values for `current_organization_id`. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "Collapsed": "false",
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 204
    },
    "colab_type": "code",
    "executionInfo": {
     "elapsed": 1031,
     "status": "ok",
     "timestamp": 1574681165815,
     "user": {
      "displayName": "Michele Pasin",
      "photoUrl": "https://lh3.googleusercontent.com/a-/AAuE7mBu8LVjIGgontF2Wax51BoL5KFx8esezX3bUmaa0g=s64",
      "userId": "10309320684375994511"
     },
     "user_tz": 0
    },
    "id": "ut6y8Di0R4DR",
    "outputId": "3a56a8d3-f5e2-463e-b367-e53f1f9d70b1"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "grid.168010.e    157\n",
       "                 148\n",
       "grid.59053.3a     96\n",
       "grid.19006.3e     95\n",
       "grid.59025.3b     92\n",
       "grid.12527.33     82\n",
       "grid.41156.37     70\n",
       "grid.116068.8     69\n",
       "grid.47840.3f     59\n",
       "grid.166341.7     58\n",
       "Name: current_organization_id, dtype: int64"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "authors['current_organization_id'].value_counts()[:10]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "Collapsed": "false",
    "colab_type": "text",
    "id": "6NpFRYBGR4DS"
   },
   "source": [
    "> Explanation: the most frequent organization turns out to be [grid.168010.e](https://www.grid.ac/institutes/grid.168010.e). The first result is empty, meaning that for those authors Dimensions has no info about `current_organization_id`. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "Collapsed": "false",
    "colab_type": "text",
    "id": "p2eN2Y8GR4DT"
   },
   "source": [
    "### Extracting Affiliations: `as_dataframe_authors_affiliations`\n",
    "\n",
    "As you can see from the results of the previous section, the `affiliations` of each author is yet another nested JSON object. \n",
    "\n",
    "> Note: the order of affiliations in the JSON is consistent with the affiliations order in the original publication\n",
    "\n",
    "The `as_dataframe_authors_affiliations` method allows to quickly extract that affiliations data and return a dataframe with **one row per affiliation**.\n",
    "\n",
    "This can be useful e.g. if one wants to count research organizations at *the time of writing* (as opposed to `current_organization_id`, which is the *most recent organization* of a researcher). "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "Collapsed": "false",
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 464
    },
    "colab_type": "code",
    "executionInfo": {
     "elapsed": 1544,
     "status": "ok",
     "timestamp": 1574681203066,
     "user": {
      "displayName": "Michele Pasin",
      "photoUrl": "https://lh3.googleusercontent.com/a-/AAuE7mBu8LVjIGgontF2Wax51BoL5KFx8esezX3bUmaa0g=s64",
      "userId": "10309320684375994511"
     },
     "user_tz": 0
    },
    "id": "fszvKPHdR4DT",
    "outputId": "704b1027-ff46-4417-e3d5-4c5f5e2c20f7"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>aff_city</th>\n",
       "      <th>aff_city_id</th>\n",
       "      <th>aff_country</th>\n",
       "      <th>aff_country_code</th>\n",
       "      <th>aff_id</th>\n",
       "      <th>aff_name</th>\n",
       "      <th>aff_raw_affiliation</th>\n",
       "      <th>aff_state</th>\n",
       "      <th>aff_state_code</th>\n",
       "      <th>pub_id</th>\n",
       "      <th>researcher_id</th>\n",
       "      <th>first_name</th>\n",
       "      <th>last_name</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>New Brunswick</td>\n",
       "      <td>5101717.0</td>\n",
       "      <td>United States</td>\n",
       "      <td>US</td>\n",
       "      <td>grid.430387.b</td>\n",
       "      <td>Rutgers, The State University of New Jersey</td>\n",
       "      <td>Materials Science and Engineering, Rutgers Uni...</td>\n",
       "      <td>New Jersey</td>\n",
       "      <td>US-NJ</td>\n",
       "      <td>pub.1050119463</td>\n",
       "      <td>ur.0633062306.03</td>\n",
       "      <td>Manish</td>\n",
       "      <td>Chhowalla</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Ulsan</td>\n",
       "      <td>1833747.0</td>\n",
       "      <td>South Korea</td>\n",
       "      <td>KR</td>\n",
       "      <td>grid.42687.3f</td>\n",
       "      <td>Ulsan National Institute of Science and Techno...</td>\n",
       "      <td>Interdisciplinary School of Green Energy and L...</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>pub.1050119463</td>\n",
       "      <td>ur.07617630407.83</td>\n",
       "      <td>Hyeon Suk</td>\n",
       "      <td>Shin</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Singapore</td>\n",
       "      <td>1880252.0</td>\n",
       "      <td>Singapore</td>\n",
       "      <td>SG</td>\n",
       "      <td>grid.4280.e</td>\n",
       "      <td>National University of Singapore</td>\n",
       "      <td>Department of Physics, National University of ...</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>pub.1050119463</td>\n",
       "      <td>ur.01150450507.27</td>\n",
       "      <td>Goki</td>\n",
       "      <td>Eda</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Singapore</td>\n",
       "      <td>1880252.0</td>\n",
       "      <td>Singapore</td>\n",
       "      <td>SG</td>\n",
       "      <td>grid.4280.e</td>\n",
       "      <td>National University of Singapore</td>\n",
       "      <td>Department of Chemistry, National University o...</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>pub.1050119463</td>\n",
       "      <td>ur.01150450507.27</td>\n",
       "      <td>Goki</td>\n",
       "      <td>Eda</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Singapore</td>\n",
       "      <td>1880252.0</td>\n",
       "      <td>Singapore</td>\n",
       "      <td>SG</td>\n",
       "      <td>grid.4280.e</td>\n",
       "      <td>National University of Singapore</td>\n",
       "      <td>Graphene Research Centre, National University ...</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>pub.1050119463</td>\n",
       "      <td>ur.01150450507.27</td>\n",
       "      <td>Goki</td>\n",
       "      <td>Eda</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        aff_city aff_city_id    aff_country aff_country_code         aff_id  \\\n",
       "0  New Brunswick   5101717.0  United States               US  grid.430387.b   \n",
       "1          Ulsan   1833747.0    South Korea               KR  grid.42687.3f   \n",
       "2      Singapore   1880252.0      Singapore               SG    grid.4280.e   \n",
       "3      Singapore   1880252.0      Singapore               SG    grid.4280.e   \n",
       "4      Singapore   1880252.0      Singapore               SG    grid.4280.e   \n",
       "\n",
       "                                            aff_name  \\\n",
       "0        Rutgers, The State University of New Jersey   \n",
       "1  Ulsan National Institute of Science and Techno...   \n",
       "2                   National University of Singapore   \n",
       "3                   National University of Singapore   \n",
       "4                   National University of Singapore   \n",
       "\n",
       "                                 aff_raw_affiliation   aff_state  \\\n",
       "0  Materials Science and Engineering, Rutgers Uni...  New Jersey   \n",
       "1  Interdisciplinary School of Green Energy and L...               \n",
       "2  Department of Physics, National University of ...               \n",
       "3  Department of Chemistry, National University o...               \n",
       "4  Graphene Research Centre, National University ...               \n",
       "\n",
       "  aff_state_code          pub_id      researcher_id first_name  last_name  \n",
       "0          US-NJ  pub.1050119463   ur.0633062306.03     Manish  Chhowalla  \n",
       "1                 pub.1050119463  ur.07617630407.83  Hyeon Suk       Shin  \n",
       "2                 pub.1050119463  ur.01150450507.27       Goki        Eda  \n",
       "3                 pub.1050119463  ur.01150450507.27       Goki        Eda  \n",
       "4                 pub.1050119463  ur.01150450507.27       Goki        Eda  "
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "affiliations = res.as_dataframe_authors_affiliations()\n",
    "affiliations.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "Collapsed": "false",
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 219
    },
    "colab_type": "code",
    "executionInfo": {
     "elapsed": 797,
     "status": "ok",
     "timestamp": 1574681207520,
     "user": {
      "displayName": "Michele Pasin",
      "photoUrl": "https://lh3.googleusercontent.com/a-/AAuE7mBu8LVjIGgontF2Wax51BoL5KFx8esezX3bUmaa0g=s64",
      "userId": "10309320684375994511"
     },
     "user_tz": 0
    },
    "id": "Ci5OzQyJR4DV",
    "outputId": "35131ce4-d325-4d49-87a3-087198f0fb72"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>aff_city</th>\n",
       "      <th>aff_city_id</th>\n",
       "      <th>aff_country</th>\n",
       "      <th>aff_country_code</th>\n",
       "      <th>aff_id</th>\n",
       "      <th>aff_name</th>\n",
       "      <th>aff_raw_affiliation</th>\n",
       "      <th>aff_state</th>\n",
       "      <th>aff_state_code</th>\n",
       "      <th>pub_id</th>\n",
       "      <th>researcher_id</th>\n",
       "      <th>first_name</th>\n",
       "      <th>last_name</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>8240</td>\n",
       "      <td>8240.0</td>\n",
       "      <td>8240</td>\n",
       "      <td>8240</td>\n",
       "      <td>8240</td>\n",
       "      <td>8240</td>\n",
       "      <td>8240</td>\n",
       "      <td>8240</td>\n",
       "      <td>8240</td>\n",
       "      <td>8240</td>\n",
       "      <td>8240</td>\n",
       "      <td>8240</td>\n",
       "      <td>8240</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>unique</th>\n",
       "      <td>519</td>\n",
       "      <td>522.0</td>\n",
       "      <td>56</td>\n",
       "      <td>56</td>\n",
       "      <td>816</td>\n",
       "      <td>1161</td>\n",
       "      <td>3008</td>\n",
       "      <td>108</td>\n",
       "      <td>55</td>\n",
       "      <td>990</td>\n",
       "      <td>4506</td>\n",
       "      <td>3568</td>\n",
       "      <td>2287</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>top</th>\n",
       "      <td>Beijing</td>\n",
       "      <td>1816670.0</td>\n",
       "      <td>United States</td>\n",
       "      <td>US</td>\n",
       "      <td></td>\n",
       "      <td>Stanford University</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>pub.1019661721</td>\n",
       "      <td></td>\n",
       "      <td>Yi</td>\n",
       "      <td>Wang</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>freq</th>\n",
       "      <td>604</td>\n",
       "      <td>604.0</td>\n",
       "      <td>2664</td>\n",
       "      <td>2664</td>\n",
       "      <td>944</td>\n",
       "      <td>280</td>\n",
       "      <td>263</td>\n",
       "      <td>5084</td>\n",
       "      <td>5278</td>\n",
       "      <td>108</td>\n",
       "      <td>172</td>\n",
       "      <td>70</td>\n",
       "      <td>331</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       aff_city  aff_city_id    aff_country aff_country_code aff_id  \\\n",
       "count      8240       8240.0           8240             8240   8240   \n",
       "unique      519        522.0             56               56    816   \n",
       "top     Beijing    1816670.0  United States               US          \n",
       "freq        604        604.0           2664             2664    944   \n",
       "\n",
       "                   aff_name aff_raw_affiliation aff_state aff_state_code  \\\n",
       "count                  8240                8240      8240           8240   \n",
       "unique                 1161                3008       108             55   \n",
       "top     Stanford University                                                \n",
       "freq                    280                 263      5084           5278   \n",
       "\n",
       "                pub_id researcher_id first_name last_name  \n",
       "count             8240          8240       8240      8240  \n",
       "unique             990          4506       3568      2287  \n",
       "top     pub.1019661721                       Yi      Wang  \n",
       "freq               108           172         70       331  "
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "affiliations.describe(include=\"all\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "Collapsed": "false",
    "colab_type": "text",
    "id": "at7DTaU5R4DW"
   },
   "source": [
    "Let's get the top ten values for `aff_id`. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "Collapsed": "false",
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 204
    },
    "colab_type": "code",
    "executionInfo": {
     "elapsed": 877,
     "status": "ok",
     "timestamp": 1574681214999,
     "user": {
      "displayName": "Michele Pasin",
      "photoUrl": "https://lh3.googleusercontent.com/a-/AAuE7mBu8LVjIGgontF2Wax51BoL5KFx8esezX3bUmaa0g=s64",
      "userId": "10309320684375994511"
     },
     "user_tz": 0
    },
    "id": "o2zUnRg0R4DX",
    "outputId": "d777c549-679c-4623-8cb0-866ec0b4bc4b"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "                 944\n",
       "grid.168010.e    280\n",
       "grid.59025.3b    195\n",
       "grid.166341.7    129\n",
       "grid.19006.3e    121\n",
       "grid.8217.c      112\n",
       "grid.12527.33    106\n",
       "grid.21729.3f     99\n",
       "grid.5379.8       91\n",
       "grid.116068.8     91\n",
       "Name: aff_id, dtype: int64"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "affiliations['aff_id'].value_counts()[:10]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "Collapsed": "false",
    "colab_type": "text",
    "id": "Zmv0M_PkR4DZ"
   },
   "source": [
    "Another example: we can now easily analyze the data by country too. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "Collapsed": "false",
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 204
    },
    "colab_type": "code",
    "executionInfo": {
     "elapsed": 1021,
     "status": "ok",
     "timestamp": 1574681222068,
     "user": {
      "displayName": "Michele Pasin",
      "photoUrl": "https://lh3.googleusercontent.com/a-/AAuE7mBu8LVjIGgontF2Wax51BoL5KFx8esezX3bUmaa0g=s64",
      "userId": "10309320684375994511"
     },
     "user_tz": 0
    },
    "id": "OnmvjI-8R4DZ",
    "outputId": "d596422c-961f-471f-9cb4-289fc066cb71"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "United States     2664\n",
       "China             2021\n",
       "                   451\n",
       "United Kingdom     395\n",
       "Singapore          310\n",
       "Germany            286\n",
       "South Korea        282\n",
       "Japan              212\n",
       "Australia          170\n",
       "Canada             167\n",
       "Name: aff_country, dtype: int64"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "affiliations['aff_country'].value_counts()[:10]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "Collapsed": "false",
    "colab_type": "text",
    "id": "a83GEMfQR4Db"
   },
   "source": [
    "> Explanation: the vast majority of authors in this dataset are from China, closely followed by the USA. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "Collapsed": "false",
    "colab_type": "text",
    "id": "69JItbFgR4Db"
   },
   "source": [
    "## 3. Dataframe Methods for 'Grants' queries"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "Collapsed": "false",
    "colab_type": "text",
    "id": "P0FLXthRR4Dc"
   },
   "source": [
    "###  Extracting Funders: `as_dataframe_funders`\n",
    "\n",
    "Grant funders authors are usually returned by the Dimensions API inside a nested JSON object in the `funders` sub-key. \n",
    "\n",
    "This methods allows to quickly extract that data and return a dataframe with **one row per funder**."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "Collapsed": "false",
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 34
    },
    "colab_type": "code",
    "executionInfo": {
     "elapsed": 3344,
     "status": "ok",
     "timestamp": 1574681269386,
     "user": {
      "displayName": "Michele Pasin",
      "photoUrl": "https://lh3.googleusercontent.com/a-/AAuE7mBu8LVjIGgontF2Wax51BoL5KFx8esezX3bUmaa0g=s64",
      "userId": "10309320684375994511"
     },
     "user_tz": 0
    },
    "id": "kjxgoy_VR4Dc",
    "outputId": "59ee9e43-ed66-4e6f-ee5e-7e81e5f9d515"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Returned Grants: 1000 (total = 12941)\n",
      "\u001b[2mTime: 1.52s\u001b[0m\n"
     ]
    }
   ],
   "source": [
    "# get a sample list of grants\n",
    "query = \"\"\"search grants for \"malaria\" return grants limit 1000\"\"\"\n",
    "res = dsl.query(query)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "Collapsed": "false",
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 1000
    },
    "colab_type": "code",
    "executionInfo": {
     "elapsed": 736,
     "status": "ok",
     "timestamp": 1574681271845,
     "user": {
      "displayName": "Michele Pasin",
      "photoUrl": "https://lh3.googleusercontent.com/a-/AAuE7mBu8LVjIGgontF2Wax51BoL5KFx8esezX3bUmaa0g=s64",
      "userId": "10309320684375994511"
     },
     "user_tz": 0
    },
    "id": "56iPhGTUR4Dd",
    "outputId": "c94bba81-caf4-4f7b-e85b-e8969e4c8b6a"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>acronym</th>\n",
       "      <th>city_name</th>\n",
       "      <th>country_name</th>\n",
       "      <th>id</th>\n",
       "      <th>latitude</th>\n",
       "      <th>linkout</th>\n",
       "      <th>longitude</th>\n",
       "      <th>name</th>\n",
       "      <th>types</th>\n",
       "      <th>state_name</th>\n",
       "      <th>grant_id</th>\n",
       "      <th>grant_title</th>\n",
       "      <th>grant_start_date</th>\n",
       "      <th>grant_end_date</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>EC</td>\n",
       "      <td>Brussels</td>\n",
       "      <td>Belgium</td>\n",
       "      <td>grid.270680.b</td>\n",
       "      <td>50.851650</td>\n",
       "      <td>[http://ec.europa.eu/index_en.htm]</td>\n",
       "      <td>4.363670</td>\n",
       "      <td>European Commission</td>\n",
       "      <td>[Government]</td>\n",
       "      <td>NaN</td>\n",
       "      <td>grant.9661764</td>\n",
       "      <td>In vitro brain microvascular model to tackle f...</td>\n",
       "      <td>2022-09-01</td>\n",
       "      <td>2024-08-31</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>EDCTP</td>\n",
       "      <td>The Hague</td>\n",
       "      <td>Netherlands</td>\n",
       "      <td>grid.453375.3</td>\n",
       "      <td>52.080574</td>\n",
       "      <td>[http://www.edctp.org/]</td>\n",
       "      <td>4.344426</td>\n",
       "      <td>European &amp; Developing Countries Clinical Trial...</td>\n",
       "      <td>[Nonprofit]</td>\n",
       "      <td>NaN</td>\n",
       "      <td>grant.9764814</td>\n",
       "      <td>Role of host immune responses in Plasmodium fa...</td>\n",
       "      <td>2022-04-01</td>\n",
       "      <td>2024-01-29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>FRQS</td>\n",
       "      <td>Montreal</td>\n",
       "      <td>Canada</td>\n",
       "      <td>grid.453037.6</td>\n",
       "      <td>45.506490</td>\n",
       "      <td>[http://www.frqs.gouv.qc.ca/en/]</td>\n",
       "      <td>-73.572200</td>\n",
       "      <td>Fonds de Recherche du Québec - Santé</td>\n",
       "      <td>[Government]</td>\n",
       "      <td>Quebec</td>\n",
       "      <td>grant.9721403</td>\n",
       "      <td>Elucidation of the mechanisms controlling prot...</td>\n",
       "      <td>2022-04-01</td>\n",
       "      <td>2025-03-31</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>BBSRC</td>\n",
       "      <td>Swindon</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>grid.418100.c</td>\n",
       "      <td>51.566742</td>\n",
       "      <td>[http://www.bbsrc.ac.uk/]</td>\n",
       "      <td>-1.784771</td>\n",
       "      <td>Biotechnology and Biological Sciences Research...</td>\n",
       "      <td>[Government]</td>\n",
       "      <td>Wiltshire</td>\n",
       "      <td>grant.9779816</td>\n",
       "      <td>BBSRC-NSF/BIO - Host immune suppression as a k...</td>\n",
       "      <td>2022-03-01</td>\n",
       "      <td>2025-02-28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>ANR</td>\n",
       "      <td>Paris</td>\n",
       "      <td>France</td>\n",
       "      <td>grid.22058.3d</td>\n",
       "      <td>48.845260</td>\n",
       "      <td>[http://www.agence-nationale-recherche.fr/en/p...</td>\n",
       "      <td>2.377769</td>\n",
       "      <td>National Agency for Research</td>\n",
       "      <td>[Government]</td>\n",
       "      <td>NaN</td>\n",
       "      <td>grant.9947992</td>\n",
       "      <td>Ivermectin Fluorescent drug to decipher molecu...</td>\n",
       "      <td>2022-01-20</td>\n",
       "      <td>2025-07-19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>ANR</td>\n",
       "      <td>Paris</td>\n",
       "      <td>France</td>\n",
       "      <td>grid.22058.3d</td>\n",
       "      <td>48.845260</td>\n",
       "      <td>[http://www.agence-nationale-recherche.fr/en/p...</td>\n",
       "      <td>2.377769</td>\n",
       "      <td>National Agency for Research</td>\n",
       "      <td>[Government]</td>\n",
       "      <td>NaN</td>\n",
       "      <td>grant.9947714</td>\n",
       "      <td>Setting boundaries: Cohesin and mutually exclu...</td>\n",
       "      <td>2022-01-20</td>\n",
       "      <td>2025-01-19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>ANR</td>\n",
       "      <td>Paris</td>\n",
       "      <td>France</td>\n",
       "      <td>grid.22058.3d</td>\n",
       "      <td>48.845260</td>\n",
       "      <td>[http://www.agence-nationale-recherche.fr/en/p...</td>\n",
       "      <td>2.377769</td>\n",
       "      <td>National Agency for Research</td>\n",
       "      <td>[Government]</td>\n",
       "      <td>NaN</td>\n",
       "      <td>grant.9947606</td>\n",
       "      <td>The epigenetic role of MORC in apicomplexan li...</td>\n",
       "      <td>2022-01-20</td>\n",
       "      <td>2026-01-19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>FCT</td>\n",
       "      <td>Lisbon</td>\n",
       "      <td>Portugal</td>\n",
       "      <td>grid.22919.31</td>\n",
       "      <td>38.709667</td>\n",
       "      <td>[http://www.fct.pt/]</td>\n",
       "      <td>-9.153090</td>\n",
       "      <td>Foundation for Science and Technology</td>\n",
       "      <td>[Nonprofit]</td>\n",
       "      <td>NaN</td>\n",
       "      <td>grant.9951207</td>\n",
       "      <td>Plasmodium exploitation of host immune complem...</td>\n",
       "      <td>2022-01-03</td>\n",
       "      <td>2023-07-02</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>SNF</td>\n",
       "      <td>Bern</td>\n",
       "      <td>Switzerland</td>\n",
       "      <td>grid.425888.b</td>\n",
       "      <td>46.949230</td>\n",
       "      <td>[http://www.snf.ch/en]</td>\n",
       "      <td>7.432395</td>\n",
       "      <td>Swiss National Science Foundation</td>\n",
       "      <td>[Government]</td>\n",
       "      <td>NaN</td>\n",
       "      <td>grant.9959780</td>\n",
       "      <td>Structural basis of erythrocyte invasion by Pl...</td>\n",
       "      <td>2022-01-01</td>\n",
       "      <td>2023-12-31</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>NHMRC</td>\n",
       "      <td>Canberra</td>\n",
       "      <td>Australia</td>\n",
       "      <td>grid.431143.0</td>\n",
       "      <td>-35.281240</td>\n",
       "      <td>[https://www.nhmrc.gov.au/]</td>\n",
       "      <td>149.123730</td>\n",
       "      <td>National Health and Medical Research Council</td>\n",
       "      <td>[Government]</td>\n",
       "      <td>Australian Capital Territory</td>\n",
       "      <td>grant.9707893</td>\n",
       "      <td>Intermittent preventive treatment in pregnancy...</td>\n",
       "      <td>2022-01-01</td>\n",
       "      <td>2025-12-31</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  acronym  city_name    country_name             id   latitude  \\\n",
       "0      EC   Brussels         Belgium  grid.270680.b  50.851650   \n",
       "1   EDCTP  The Hague     Netherlands  grid.453375.3  52.080574   \n",
       "2    FRQS   Montreal          Canada  grid.453037.6  45.506490   \n",
       "3   BBSRC    Swindon  United Kingdom  grid.418100.c  51.566742   \n",
       "4    ANR       Paris          France  grid.22058.3d  48.845260   \n",
       "5    ANR       Paris          France  grid.22058.3d  48.845260   \n",
       "6    ANR       Paris          France  grid.22058.3d  48.845260   \n",
       "7     FCT     Lisbon        Portugal  grid.22919.31  38.709667   \n",
       "8     SNF       Bern     Switzerland  grid.425888.b  46.949230   \n",
       "9   NHMRC   Canberra       Australia  grid.431143.0 -35.281240   \n",
       "\n",
       "                                             linkout   longitude  \\\n",
       "0                 [http://ec.europa.eu/index_en.htm]    4.363670   \n",
       "1                            [http://www.edctp.org/]    4.344426   \n",
       "2                   [http://www.frqs.gouv.qc.ca/en/]  -73.572200   \n",
       "3                          [http://www.bbsrc.ac.uk/]   -1.784771   \n",
       "4  [http://www.agence-nationale-recherche.fr/en/p...    2.377769   \n",
       "5  [http://www.agence-nationale-recherche.fr/en/p...    2.377769   \n",
       "6  [http://www.agence-nationale-recherche.fr/en/p...    2.377769   \n",
       "7                               [http://www.fct.pt/]   -9.153090   \n",
       "8                             [http://www.snf.ch/en]    7.432395   \n",
       "9                        [https://www.nhmrc.gov.au/]  149.123730   \n",
       "\n",
       "                                                name         types  \\\n",
       "0                                European Commission  [Government]   \n",
       "1  European & Developing Countries Clinical Trial...   [Nonprofit]   \n",
       "2               Fonds de Recherche du Québec - Santé  [Government]   \n",
       "3  Biotechnology and Biological Sciences Research...  [Government]   \n",
       "4                       National Agency for Research  [Government]   \n",
       "5                       National Agency for Research  [Government]   \n",
       "6                       National Agency for Research  [Government]   \n",
       "7              Foundation for Science and Technology   [Nonprofit]   \n",
       "8                  Swiss National Science Foundation  [Government]   \n",
       "9       National Health and Medical Research Council  [Government]   \n",
       "\n",
       "                     state_name       grant_id  \\\n",
       "0                           NaN  grant.9661764   \n",
       "1                           NaN  grant.9764814   \n",
       "2                        Quebec  grant.9721403   \n",
       "3                     Wiltshire  grant.9779816   \n",
       "4                           NaN  grant.9947992   \n",
       "5                           NaN  grant.9947714   \n",
       "6                           NaN  grant.9947606   \n",
       "7                           NaN  grant.9951207   \n",
       "8                           NaN  grant.9959780   \n",
       "9  Australian Capital Territory  grant.9707893   \n",
       "\n",
       "                                         grant_title grant_start_date  \\\n",
       "0  In vitro brain microvascular model to tackle f...       2022-09-01   \n",
       "1  Role of host immune responses in Plasmodium fa...       2022-04-01   \n",
       "2  Elucidation of the mechanisms controlling prot...       2022-04-01   \n",
       "3  BBSRC-NSF/BIO - Host immune suppression as a k...       2022-03-01   \n",
       "4  Ivermectin Fluorescent drug to decipher molecu...       2022-01-20   \n",
       "5  Setting boundaries: Cohesin and mutually exclu...       2022-01-20   \n",
       "6  The epigenetic role of MORC in apicomplexan li...       2022-01-20   \n",
       "7  Plasmodium exploitation of host immune complem...       2022-01-03   \n",
       "8  Structural basis of erythrocyte invasion by Pl...       2022-01-01   \n",
       "9  Intermittent preventive treatment in pregnancy...       2022-01-01   \n",
       "\n",
       "  grant_end_date  \n",
       "0     2024-08-31  \n",
       "1     2024-01-29  \n",
       "2     2025-03-31  \n",
       "3     2025-02-28  \n",
       "4     2025-07-19  \n",
       "5     2025-01-19  \n",
       "6     2026-01-19  \n",
       "7     2023-07-02  \n",
       "8     2023-12-31  \n",
       "9     2025-12-31  "
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "res.as_dataframe_funders().head(10)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "Collapsed": "false",
    "colab_type": "text",
    "id": "UqanXsrmR4Df"
   },
   "source": [
    "### Extracting investigators: `as_dataframe_investigators`\n",
    "\n",
    "Grant investigators are usually returned by the Dimensions API inside a nested JSON object in the `investigators` sub-key. \n",
    "\n",
    "This methods allows to quickly extract that data and return a dataframe with **one row per investigator**.\n",
    "\n",
    "> NOTE: `investigators` are not returned by default in a grants query hence one must specify this in the query results"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {
    "Collapsed": "false",
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 88
    },
    "colab_type": "code",
    "executionInfo": {
     "elapsed": 3591,
     "status": "ok",
     "timestamp": 1574681293076,
     "user": {
      "displayName": "Michele Pasin",
      "photoUrl": "https://lh3.googleusercontent.com/a-/AAuE7mBu8LVjIGgontF2Wax51BoL5KFx8esezX3bUmaa0g=s64",
      "userId": "10309320684375994511"
     },
     "user_tz": 0
    },
    "id": "QZS6TePGR4Df",
    "outputId": "aae7e731-18a0-488f-b65f-111dfab61b8b"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Returned Grants: 1000 (total = 12941)\n",
      "\u001b[2mTime: 2.29s\u001b[0m\n"
     ]
    }
   ],
   "source": [
    "# get a sample list of grants\n",
    "query = \"\"\"search grants for \"malaria\" return grants[basics+investigators] limit 1000\"\"\"\n",
    "res = dsl.query(query)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "Collapsed": "false"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>grant_id</th>\n",
       "      <th>grant_title</th>\n",
       "      <th>grant_start_date</th>\n",
       "      <th>grant_end_date</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Empty DataFrame\n",
       "Columns: [grant_id, grant_title, grant_start_date, grant_end_date]\n",
       "Index: []"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "res.as_dataframe_investigators().head(10)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "Collapsed": "false",
    "colab_type": "text",
    "id": "p2eN2Y8GR4DT"
   },
   "source": [
    "## 4. Dataframe Methods for 'Concepts' queries\n",
    "\n",
    "These methods can be used with all content types that support the extraction of concepts, i.e., `publications` or `grants`. See the [official documentation](https://docs.dimensions.ai/dsl/data-sources.html) for more details."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "Collapsed": "false",
    "colab_type": "text",
    "id": "p2eN2Y8GR4DT"
   },
   "source": [
    "### Extracting Concepts: `as_dataframe_concepts`\n",
    "\n",
    "The `as_dataframe_concepts` method allows to quickly extract all concepts attached to a record, **one row per concept**, so to make it easier to do operations like counting or plotting the results.\n",
    "\n",
    "NOTE: concepts are normalized *noun phrases* describing the main topics of a document, which are automatically derived from the full text  using machine learning. In the JSON data, concepts are available as an ordered list (=first items are the most relevant), including a relevance score. E.g. for the publications with ID 'pub.1122072646': \n",
    "\n",
    "```\n",
    "{'id': 'pub.1122072646',\n",
    "'concepts_scores': [{'concept': 'acid', 'relevance': 0.07450046286579201}, \n",
    "                    {'concept': 'conversion', 'relevance': 0.055053872555463006}, \n",
    "                    {'concept': 'formic acid', 'relevance': 0.048144671935356},\n",
    "                    {'concept': 'CO2', 'relevance': 0.032150964737607}\n",
    "                    [........]\n",
    "                    ],\n",
    " }\n",
    "```\n",
    "\n",
    "The `as_dataframe_concepts` extracts all concepts data from JSON to a dataframe (ps this is functionally similarly to pandas's [explode method](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.explode.html)). Moreover, it automatically creates a number of metrics that can be used to carry out further analyses, like `frequency` and `score_avg`. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {
    "Collapsed": "false"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Returned Publications: 100 (total = 116623)\n",
      "\u001b[2mTime: 1.15s\u001b[0m\n",
      "Concepts found:  5346\n",
      "Unique:  3339\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>title</th>\n",
       "      <th>year</th>\n",
       "      <th>concepts_count</th>\n",
       "      <th>concept</th>\n",
       "      <th>score</th>\n",
       "      <th>frequency</th>\n",
       "      <th>score_avg</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>pub.1129328198</td>\n",
       "      <td>Study of mechanochemistry of carbon nanotube u...</td>\n",
       "      <td>2019</td>\n",
       "      <td>6</td>\n",
       "      <td>study</td>\n",
       "      <td>0.088</td>\n",
       "      <td>31</td>\n",
       "      <td>0.21619</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>pub.1129328198</td>\n",
       "      <td>Study of mechanochemistry of carbon nanotube u...</td>\n",
       "      <td>2019</td>\n",
       "      <td>6</td>\n",
       "      <td>principles</td>\n",
       "      <td>0.047</td>\n",
       "      <td>2</td>\n",
       "      <td>0.13200</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>pub.1129328198</td>\n",
       "      <td>Study of mechanochemistry of carbon nanotube u...</td>\n",
       "      <td>2019</td>\n",
       "      <td>6</td>\n",
       "      <td>mechanochemistry</td>\n",
       "      <td>0.015</td>\n",
       "      <td>1</td>\n",
       "      <td>0.01500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>pub.1129328198</td>\n",
       "      <td>Study of mechanochemistry of carbon nanotube u...</td>\n",
       "      <td>2019</td>\n",
       "      <td>6</td>\n",
       "      <td>first principles</td>\n",
       "      <td>0.012</td>\n",
       "      <td>1</td>\n",
       "      <td>0.01200</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>pub.1129328198</td>\n",
       "      <td>Study of mechanochemistry of carbon nanotube u...</td>\n",
       "      <td>2019</td>\n",
       "      <td>6</td>\n",
       "      <td>carbon nanotubes</td>\n",
       "      <td>0.010</td>\n",
       "      <td>6</td>\n",
       "      <td>0.38033</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               id                                              title  year  \\\n",
       "0  pub.1129328198  Study of mechanochemistry of carbon nanotube u...  2019   \n",
       "1  pub.1129328198  Study of mechanochemistry of carbon nanotube u...  2019   \n",
       "2  pub.1129328198  Study of mechanochemistry of carbon nanotube u...  2019   \n",
       "3  pub.1129328198  Study of mechanochemistry of carbon nanotube u...  2019   \n",
       "4  pub.1129328198  Study of mechanochemistry of carbon nanotube u...  2019   \n",
       "\n",
       "   concepts_count           concept  score  frequency  score_avg  \n",
       "0               6             study  0.088         31    0.21619  \n",
       "1               6        principles  0.047          2    0.13200  \n",
       "2               6  mechanochemistry  0.015          1    0.01500  \n",
       "3               6  first principles  0.012          1    0.01200  \n",
       "4               6  carbon nanotubes  0.010          6    0.38033  "
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "q = \"\"\"search publications for \"graphene\" \n",
    "            where year=2019 \n",
    "       return publications[id+title+year+concepts_scores] limit 100\"\"\"\n",
    "\n",
    "concepts = dsl.query(q).as_dataframe_concepts()\n",
    "\n",
    "print(\"Concepts found: \", len(concepts))\n",
    "print(\"Unique: \", len(concepts.drop_duplicates(\"concept\")))\n",
    "\n",
    "concepts.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {
    "Collapsed": "false"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>concept</th>\n",
       "      <th>score_avg</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1660</th>\n",
       "      <td>mesoporous silica nanoparticles</td>\n",
       "      <td>0.919</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>550</th>\n",
       "      <td>two-dimensional transition metal dichalcogenides</td>\n",
       "      <td>0.918</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>551</th>\n",
       "      <td>spin-orbit coupling</td>\n",
       "      <td>0.903</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4333</th>\n",
       "      <td>fiber Bragg grating</td>\n",
       "      <td>0.885</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2793</th>\n",
       "      <td>oxygen reduction reaction</td>\n",
       "      <td>0.882</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3465</th>\n",
       "      <td>MoP/SiO2 catalyst</td>\n",
       "      <td>0.878</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2335</th>\n",
       "      <td>silica nano particles</td>\n",
       "      <td>0.874</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>552</th>\n",
       "      <td>quantum spin Hall effect</td>\n",
       "      <td>0.872</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2794</th>\n",
       "      <td>oxygen evolution reaction</td>\n",
       "      <td>0.870</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>553</th>\n",
       "      <td>Ising spin-orbit coupling</td>\n",
       "      <td>0.869</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                               concept  score_avg\n",
       "1660                   mesoporous silica nanoparticles      0.919\n",
       "550   two-dimensional transition metal dichalcogenides      0.918\n",
       "551                                spin-orbit coupling      0.903\n",
       "4333                               fiber Bragg grating      0.885\n",
       "2793                         oxygen reduction reaction      0.882\n",
       "3465                                 MoP/SiO2 catalyst      0.878\n",
       "2335                             silica nano particles      0.874\n",
       "552                           quantum spin Hall effect      0.872\n",
       "2794                         oxygen evolution reaction      0.870\n",
       "553                          Ising spin-orbit coupling      0.869"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "concepts.drop_duplicates(\"concept\").sort_values(\"score_avg\", ascending=False).head(10)[['concept', 'score_avg']]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "Collapsed": "false"
   },
   "source": [
    "Please note that (as of version 1.25 of the DSL API) it is possible to return either `concepts_scores` or `concepts` with Publications queries, but only `concepts` with Grants queries.  \n",
    "\n",
    "If a relevancy score is not available, the `as_dataframe_concepts` function will simulate one based on the concept rank (=its position in the document-concepts list).  \n",
    "\n",
    "For more information on how to make use of `concepts` please see the [Topic Modeling Analysis Tutorial](https://api-lab.dimensions.ai/cookbooks/2-publications/Simple-topic-analysis.html) and the [Official documentation](https://docs.dimensions.ai/dsl/). "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "Collapsed": "false",
    "colab_type": "text",
    "id": "WkolG6VKR4Dj"
   },
   "source": [
    "## Conclusions \n",
    "\n",
    "Moving Dimensions API results to pandas dataframes **makes it easier** to **analyze the data** and **answer research questions**. \n",
    "\n",
    "Note: the examples above only scratch the surface of what can be done with pandas! \n",
    "\n",
    "> Tip: see also the *Dimcli: Magic Commands* notebook to find out what shortcuts are available for these dataframe methods. "
   ]
  }
 ],
 "metadata": {
  "colab": {
   "collapsed_sections": [],
   "name": "3-Working-with-dataframes.ipynb",
   "provenance": [],
   "toc_visible": true
  },
  "kernel_info": {
   "name": "python3"
  },
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.9"
  },
  "nteract": {
   "version": "0.14.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
