{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "Collapsed": "false",
    "colab_type": "text",
    "id": "bWInkHqxWgS5"
   },
   "source": [
    "# Working with lists in the Dimensions API"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "Collapsed": "false",
    "colab_type": "text",
    "id": "otugQPglcszo"
   },
   "source": [
    "In this notebook we are going to show:\n",
    "\n",
    "* How to use lists in order to write more efficient DSL queries\n",
    "* How lists can be used to concatenate the results of one query with another query \n",
    "* How these methods can be used for real-word applications e.g., getting publications/patents/grants that cite my publications"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "Collapsed": "false",
    "colab_type": "text",
    "id": "hMaQlB7DG8Vw"
   },
   "source": [
    "## Prerequisites\n",
    "\n",
    "This notebook assumes you have installed the [Dimcli](https://pypi.org/project/dimcli/) library and are familiar with the *Getting Started* tutorial.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {
    "Collapsed": "false"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "==\n",
      "Logging in..\n",
      "\u001b[2mDimcli - Dimensions API Client (v0.7.4.2)\u001b[0m\n",
      "\u001b[2mConnected to: https://app.dimensions.ai - DSL v1.27\u001b[0m\n",
      "\u001b[2mMethod: dsl.ini file\u001b[0m\n"
     ]
    }
   ],
   "source": [
    "!pip install dimcli -U --quiet \n",
    "\n",
    "import dimcli\n",
    "from dimcli.shortcuts import *\n",
    "import sys\n",
    "import json\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "\n",
    "print(\"==\\nLogging in..\")\n",
    "# https://github.com/digital-science/dimcli#authentication\n",
    "ENDPOINT = \"https://app.dimensions.ai\"\n",
    "if 'google.colab' in sys.modules:\n",
    "  import getpass\n",
    "  USERNAME = getpass.getpass(prompt='Username: ')\n",
    "  PASSWORD = getpass.getpass(prompt='Password: ')    \n",
    "  dimcli.login(USERNAME, PASSWORD, ENDPOINT)\n",
    "else:\n",
    "  USERNAME, PASSWORD  = \"\", \"\"\n",
    "  dimcli.login(USERNAME, PASSWORD, ENDPOINT)\n",
    "dsl = dimcli.Dsl()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "Collapsed": "false",
    "colab_type": "text",
    "id": "ODfZ_UmyebRk"
   },
   "source": [
    "## 1. How do we use lists in the Dimensions API?\n",
    "\n",
    "We use lists in the API because they are easier to read, and easier to work with.\n",
    "\n",
    "Here is a query without lists. \n",
    "\n",
    "\n",
    "How many publications were produced from either Monash or Melbourne University ( grid.1002.3, grid.1008.9 ) in either (2019 OR 2020).  Be really careful with your brakets!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "Collapsed": "false",
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 176
    },
    "colab_type": "code",
    "id": "ALKtHwvFbKOq",
    "outputId": "ec312db0-d247-47c6-ba98-cb9f905a507e"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Returned Publications: 1 (total = 39938)\n",
      "\u001b[2mTime: 0.45s\u001b[0m\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>title</th>\n",
       "      <th>pages</th>\n",
       "      <th>author_affiliations</th>\n",
       "      <th>year</th>\n",
       "      <th>issue</th>\n",
       "      <th>id</th>\n",
       "      <th>type</th>\n",
       "      <th>volume</th>\n",
       "      <th>journal.id</th>\n",
       "      <th>journal.title</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>“Surviving not thriving”: experiences of healt...</td>\n",
       "      <td>809-823</td>\n",
       "      <td>[[{'first_name': 'Madelaine', 'last_name': 'Sm...</td>\n",
       "      <td>2020</td>\n",
       "      <td>1</td>\n",
       "      <td>pub.1128910744</td>\n",
       "      <td>article</td>\n",
       "      <td>25</td>\n",
       "      <td>jour.1097842</td>\n",
       "      <td>International Journal of Adolescence and Youth</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                               title    pages  \\\n",
       "0  “Surviving not thriving”: experiences of healt...  809-823   \n",
       "\n",
       "                                 author_affiliations  year issue  \\\n",
       "0  [[{'first_name': 'Madelaine', 'last_name': 'Sm...  2020     1   \n",
       "\n",
       "               id     type volume    journal.id  \\\n",
       "0  pub.1128910744  article     25  jour.1097842   \n",
       "\n",
       "                                    journal.title  \n",
       "0  International Journal of Adolescence and Youth  "
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%dsldf\n",
    "\n",
    "search publications \n",
    "where \n",
    "      (\n",
    "          research_orgs.id = \"grid.1008.9\"\n",
    "       or research_orgs.id = \"grid.1002.3\"\n",
    "       )\n",
    "  and (\n",
    "          year = 2019 \n",
    "       or year = 2020\n",
    "       )\n",
    "return publications \n",
    "limit 1\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "Collapsed": "false",
    "colab_type": "text",
    "id": "pV5O5Jk_gWlH"
   },
   "source": [
    "The query above could get really messy. What if I wanted 20 institutions.  What if I wanted the last ten years: (or,or,or,or,or....) and (or,or,or,or,or)\n",
    "\n",
    "By using lists we can quickly add a large number of conditions by means of an easy to read square-brakets notation:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "Collapsed": "false",
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 638
    },
    "colab_type": "code",
    "id": "i1xaPkUNiJKY",
    "outputId": "bfe173e5-307c-4e83-ee1c-a8825040b1ab"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Returned Publications: 100 (total = 39938)\n",
      "\u001b[2mTime: 0.45s\u001b[0m\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>pub.1128910744</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>pub.1125408894</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>pub.1125679504</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>pub.1121881108</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>pub.1125399511</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95</th>\n",
       "      <td>pub.1130154967</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>96</th>\n",
       "      <td>pub.1130473004</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>97</th>\n",
       "      <td>pub.1130565969</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98</th>\n",
       "      <td>pub.1129877063</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99</th>\n",
       "      <td>pub.1130210026</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>100 rows × 1 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                id\n",
       "0   pub.1128910744\n",
       "1   pub.1125408894\n",
       "2   pub.1125679504\n",
       "3   pub.1121881108\n",
       "4   pub.1125399511\n",
       "..             ...\n",
       "95  pub.1130154967\n",
       "96  pub.1130473004\n",
       "97  pub.1130565969\n",
       "98  pub.1129877063\n",
       "99  pub.1130210026\n",
       "\n",
       "[100 rows x 1 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%dsldf\n",
    "search publications \n",
    "where research_orgs.id in [\"grid.1008.9\",\"grid.1002.3\"]\n",
    "  and year in [2019:2020]\n",
    "return publications[id] \n",
    "limit 100"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "Collapsed": "false",
    "colab_type": "text",
    "id": "_5werfbWPTlP"
   },
   "source": [
    "## 2. What are all the things that we can make lists of in the Dimensions API?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "Collapsed": "false",
    "colab_type": "text",
    "id": "-x5XW6NTPQ3T"
   },
   "source": [
    "### What are the internal Entities that we might put in a list?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "Collapsed": "false",
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 3305
    },
    "colab_type": "code",
    "id": "ouN27ifBSr2e",
    "outputId": "5b268a7e-31c5-4b60-dd1e-56c9851f5ddf"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sources</th>\n",
       "      <th>field</th>\n",
       "      <th>type</th>\n",
       "      <th>description</th>\n",
       "      <th>is_filter</th>\n",
       "      <th>is_entity</th>\n",
       "      <th>is_facet</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>publications</td>\n",
       "      <td>category_bra</td>\n",
       "      <td>categories</td>\n",
       "      <td>`Broad Research Areas &lt;https://dimensions.fres...</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>publications</td>\n",
       "      <td>category_for</td>\n",
       "      <td>categories</td>\n",
       "      <td>`ANZSRC Fields of Research classification &lt;htt...</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>publications</td>\n",
       "      <td>category_hra</td>\n",
       "      <td>categories</td>\n",
       "      <td>`Health Research Areas &lt;https://dimensions.fre...</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>publications</td>\n",
       "      <td>category_hrcs_hc</td>\n",
       "      <td>categories</td>\n",
       "      <td>`HRCS - Health Categories &lt;https://dimensions....</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>publications</td>\n",
       "      <td>category_hrcs_rac</td>\n",
       "      <td>categories</td>\n",
       "      <td>`HRCS – Research Activity Codes &lt;https://dimen...</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>284</th>\n",
       "      <td>datasets</td>\n",
       "      <td>research_org_cities</td>\n",
       "      <td>cities</td>\n",
       "      <td>City of the organisations the publication auth...</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>285</th>\n",
       "      <td>datasets</td>\n",
       "      <td>research_org_countries</td>\n",
       "      <td>countries</td>\n",
       "      <td>Country of the organisations the publication a...</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>286</th>\n",
       "      <td>datasets</td>\n",
       "      <td>research_org_states</td>\n",
       "      <td>states</td>\n",
       "      <td>State of the organisations the publication aut...</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>287</th>\n",
       "      <td>datasets</td>\n",
       "      <td>research_orgs</td>\n",
       "      <td>organizations</td>\n",
       "      <td>GRID organisations linked to the publication a...</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>288</th>\n",
       "      <td>datasets</td>\n",
       "      <td>researchers</td>\n",
       "      <td>researchers</td>\n",
       "      <td>Dimensions researchers IDs associated to the d...</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>101 rows × 7 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          sources                   field           type  \\\n",
       "6    publications            category_bra     categories   \n",
       "7    publications            category_for     categories   \n",
       "8    publications            category_hra     categories   \n",
       "9    publications        category_hrcs_hc     categories   \n",
       "10   publications       category_hrcs_rac     categories   \n",
       "..            ...                     ...            ...   \n",
       "284      datasets     research_org_cities         cities   \n",
       "285      datasets  research_org_countries      countries   \n",
       "286      datasets     research_org_states         states   \n",
       "287      datasets           research_orgs  organizations   \n",
       "288      datasets             researchers    researchers   \n",
       "\n",
       "                                           description  is_filter  is_entity  \\\n",
       "6    `Broad Research Areas <https://dimensions.fres...       True       True   \n",
       "7    `ANZSRC Fields of Research classification <htt...       True       True   \n",
       "8    `Health Research Areas <https://dimensions.fre...       True       True   \n",
       "9    `HRCS - Health Categories <https://dimensions....       True       True   \n",
       "10   `HRCS – Research Activity Codes <https://dimen...       True       True   \n",
       "..                                                 ...        ...        ...   \n",
       "284  City of the organisations the publication auth...       True       True   \n",
       "285  Country of the organisations the publication a...       True       True   \n",
       "286  State of the organisations the publication aut...       True       True   \n",
       "287  GRID organisations linked to the publication a...       True       True   \n",
       "288  Dimensions researchers IDs associated to the d...       True       True   \n",
       "\n",
       "     is_facet  \n",
       "6        True  \n",
       "7        True  \n",
       "8        True  \n",
       "9        True  \n",
       "10       True  \n",
       "..        ...  \n",
       "284      True  \n",
       "285      True  \n",
       "286      True  \n",
       "287      True  \n",
       "288      True  \n",
       "\n",
       "[101 rows x 7 columns]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%dsldocs\n",
    "dsl_last_results[dsl_last_results['is_entity']==True]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "Collapsed": "false",
    "colab_type": "text",
    "id": "joP5PwdWQIOF"
   },
   "source": [
    "### What about lists of ids?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "Collapsed": "false",
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 1043
    },
    "colab_type": "code",
    "id": "iGZBDHFkNKVa",
    "outputId": "5600f04b-b89a-425b-91b3-2f2205816418"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sources</th>\n",
       "      <th>field</th>\n",
       "      <th>type</th>\n",
       "      <th>description</th>\n",
       "      <th>is_filter</th>\n",
       "      <th>is_entity</th>\n",
       "      <th>is_facet</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>publications</td>\n",
       "      <td>altmetric_id</td>\n",
       "      <td>integer</td>\n",
       "      <td>AltMetric Publication ID</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>publications</td>\n",
       "      <td>id</td>\n",
       "      <td>string</td>\n",
       "      <td>Dimensions publication ID.</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>publications</td>\n",
       "      <td>pmcid</td>\n",
       "      <td>string</td>\n",
       "      <td>PubMed Central ID.</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>publications</td>\n",
       "      <td>pmid</td>\n",
       "      <td>string</td>\n",
       "      <td>PubMed ID.</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <td>publications</td>\n",
       "      <td>reference_ids</td>\n",
       "      <td>string</td>\n",
       "      <td>Dimensions publication ID for publications in ...</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>51</th>\n",
       "      <td>publications</td>\n",
       "      <td>supporting_grant_ids</td>\n",
       "      <td>string</td>\n",
       "      <td>Grants supporting a publication, returned as a...</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>89</th>\n",
       "      <td>grants</td>\n",
       "      <td>id</td>\n",
       "      <td>string</td>\n",
       "      <td>Dimensions grant ID.</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>111</th>\n",
       "      <td>patents</td>\n",
       "      <td>associated_grant_ids</td>\n",
       "      <td>string</td>\n",
       "      <td>Dimensions IDs of the grants associated to the...</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>120</th>\n",
       "      <td>patents</td>\n",
       "      <td>cited_by_ids</td>\n",
       "      <td>string</td>\n",
       "      <td>Dimensions IDs of the patents that cite this p...</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>133</th>\n",
       "      <td>patents</td>\n",
       "      <td>id</td>\n",
       "      <td>string</td>\n",
       "      <td>Dimensions patent ID</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>143</th>\n",
       "      <td>patents</td>\n",
       "      <td>publication_ids</td>\n",
       "      <td>string</td>\n",
       "      <td>Dimensions IDs of the publications related to ...</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>146</th>\n",
       "      <td>patents</td>\n",
       "      <td>reference_ids</td>\n",
       "      <td>string</td>\n",
       "      <td>Dimensions IDs of the patents which are cited ...</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>154</th>\n",
       "      <td>clinical_trials</td>\n",
       "      <td>associated_grant_ids</td>\n",
       "      <td>string</td>\n",
       "      <td>Dimensions IDs of the grants associated to the...</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>171</th>\n",
       "      <td>clinical_trials</td>\n",
       "      <td>id</td>\n",
       "      <td>string</td>\n",
       "      <td>Dimensions clinical trial ID</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>177</th>\n",
       "      <td>clinical_trials</td>\n",
       "      <td>publication_ids</td>\n",
       "      <td>string</td>\n",
       "      <td>Dimensions IDs of the publications related to ...</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>193</th>\n",
       "      <td>policy_documents</td>\n",
       "      <td>id</td>\n",
       "      <td>string</td>\n",
       "      <td>Dimensions policy document ID</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>195</th>\n",
       "      <td>policy_documents</td>\n",
       "      <td>publication_ids</td>\n",
       "      <td>string</td>\n",
       "      <td>Dimensions IDs of the publications related to ...</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>208</th>\n",
       "      <td>researchers</td>\n",
       "      <td>id</td>\n",
       "      <td>string</td>\n",
       "      <td>Dimensions researcher ID.</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>212</th>\n",
       "      <td>researchers</td>\n",
       "      <td>nih_ppid</td>\n",
       "      <td>string</td>\n",
       "      <td>The PI Profile ID (i.e., ppid) is a Researcher...</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>214</th>\n",
       "      <td>researchers</td>\n",
       "      <td>orcid_id</td>\n",
       "      <td>string</td>\n",
       "      <td>`ORCID &lt;https://orcid.org/&gt;`_ ID.</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>221</th>\n",
       "      <td>organizations</td>\n",
       "      <td>cnrs_ids</td>\n",
       "      <td>string</td>\n",
       "      <td>CNRS IDs for this organization</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>225</th>\n",
       "      <td>organizations</td>\n",
       "      <td>external_ids_fundref</td>\n",
       "      <td>string</td>\n",
       "      <td>Fundref IDs for this organization</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>226</th>\n",
       "      <td>organizations</td>\n",
       "      <td>hesa_ids</td>\n",
       "      <td>string</td>\n",
       "      <td>HESA IDs for this organization</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>227</th>\n",
       "      <td>organizations</td>\n",
       "      <td>id</td>\n",
       "      <td>string</td>\n",
       "      <td>GRID ID of the organization. E.g., \"grid.26999...</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>228</th>\n",
       "      <td>organizations</td>\n",
       "      <td>isni_ids</td>\n",
       "      <td>string</td>\n",
       "      <td>ISNI IDs for this organization</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>239</th>\n",
       "      <td>organizations</td>\n",
       "      <td>organization_child_ids</td>\n",
       "      <td>string</td>\n",
       "      <td>Child organization IDs</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>240</th>\n",
       "      <td>organizations</td>\n",
       "      <td>organization_parent_ids</td>\n",
       "      <td>string</td>\n",
       "      <td>Parent organization IDs</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>241</th>\n",
       "      <td>organizations</td>\n",
       "      <td>organization_related_ids</td>\n",
       "      <td>string</td>\n",
       "      <td>Related organization IDs</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>242</th>\n",
       "      <td>organizations</td>\n",
       "      <td>orgref_ids</td>\n",
       "      <td>string</td>\n",
       "      <td>OrgRef IDs for this organization</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>244</th>\n",
       "      <td>organizations</td>\n",
       "      <td>ror_ids</td>\n",
       "      <td>string</td>\n",
       "      <td>ROR IDs for this organization</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>248</th>\n",
       "      <td>organizations</td>\n",
       "      <td>ucas_ids</td>\n",
       "      <td>string</td>\n",
       "      <td>UCAS IDs for this organization</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>249</th>\n",
       "      <td>organizations</td>\n",
       "      <td>ukprn_ids</td>\n",
       "      <td>string</td>\n",
       "      <td>UKPRN IDs for this organization</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>250</th>\n",
       "      <td>organizations</td>\n",
       "      <td>wikidata_ids</td>\n",
       "      <td>string</td>\n",
       "      <td>WikiData IDs for this organization</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>252</th>\n",
       "      <td>datasets</td>\n",
       "      <td>associated_grant_ids</td>\n",
       "      <td>string</td>\n",
       "      <td>The Dimensions IDs of the grants linked to the...</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>254</th>\n",
       "      <td>datasets</td>\n",
       "      <td>associated_publication_id</td>\n",
       "      <td>string</td>\n",
       "      <td>The Dimensions ID of the publication linked to...</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>276</th>\n",
       "      <td>datasets</td>\n",
       "      <td>id</td>\n",
       "      <td>string</td>\n",
       "      <td>Dimensions dataset ID.</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>283</th>\n",
       "      <td>datasets</td>\n",
       "      <td>repository_id</td>\n",
       "      <td>string</td>\n",
       "      <td>The ID of the repository of the dataset.</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              sources                      field     type  \\\n",
       "1        publications               altmetric_id  integer   \n",
       "25       publications                         id   string   \n",
       "34       publications                      pmcid   string   \n",
       "35       publications                       pmid   string   \n",
       "39       publications              reference_ids   string   \n",
       "51       publications       supporting_grant_ids   string   \n",
       "89             grants                         id   string   \n",
       "111           patents       associated_grant_ids   string   \n",
       "120           patents               cited_by_ids   string   \n",
       "133           patents                         id   string   \n",
       "143           patents            publication_ids   string   \n",
       "146           patents              reference_ids   string   \n",
       "154   clinical_trials       associated_grant_ids   string   \n",
       "171   clinical_trials                         id   string   \n",
       "177   clinical_trials            publication_ids   string   \n",
       "193  policy_documents                         id   string   \n",
       "195  policy_documents            publication_ids   string   \n",
       "208       researchers                         id   string   \n",
       "212       researchers                   nih_ppid   string   \n",
       "214       researchers                   orcid_id   string   \n",
       "221     organizations                   cnrs_ids   string   \n",
       "225     organizations       external_ids_fundref   string   \n",
       "226     organizations                   hesa_ids   string   \n",
       "227     organizations                         id   string   \n",
       "228     organizations                   isni_ids   string   \n",
       "239     organizations     organization_child_ids   string   \n",
       "240     organizations    organization_parent_ids   string   \n",
       "241     organizations   organization_related_ids   string   \n",
       "242     organizations                 orgref_ids   string   \n",
       "244     organizations                    ror_ids   string   \n",
       "248     organizations                   ucas_ids   string   \n",
       "249     organizations                  ukprn_ids   string   \n",
       "250     organizations               wikidata_ids   string   \n",
       "252          datasets       associated_grant_ids   string   \n",
       "254          datasets  associated_publication_id   string   \n",
       "276          datasets                         id   string   \n",
       "283          datasets              repository_id   string   \n",
       "\n",
       "                                           description  is_filter  is_entity  \\\n",
       "1                             AltMetric Publication ID       True      False   \n",
       "25                          Dimensions publication ID.       True      False   \n",
       "34                                  PubMed Central ID.       True      False   \n",
       "35                                          PubMed ID.       True      False   \n",
       "39   Dimensions publication ID for publications in ...       True      False   \n",
       "51   Grants supporting a publication, returned as a...       True      False   \n",
       "89                                Dimensions grant ID.       True      False   \n",
       "111  Dimensions IDs of the grants associated to the...       True      False   \n",
       "120  Dimensions IDs of the patents that cite this p...       True      False   \n",
       "133                               Dimensions patent ID       True      False   \n",
       "143  Dimensions IDs of the publications related to ...       True      False   \n",
       "146  Dimensions IDs of the patents which are cited ...       True      False   \n",
       "154  Dimensions IDs of the grants associated to the...       True      False   \n",
       "171                       Dimensions clinical trial ID       True      False   \n",
       "177  Dimensions IDs of the publications related to ...       True      False   \n",
       "193                      Dimensions policy document ID       True      False   \n",
       "195  Dimensions IDs of the publications related to ...       True      False   \n",
       "208                          Dimensions researcher ID.       True      False   \n",
       "212  The PI Profile ID (i.e., ppid) is a Researcher...       True      False   \n",
       "214                  `ORCID <https://orcid.org/>`_ ID.       True      False   \n",
       "221                     CNRS IDs for this organization       True      False   \n",
       "225                  Fundref IDs for this organization       True      False   \n",
       "226                     HESA IDs for this organization       True      False   \n",
       "227  GRID ID of the organization. E.g., \"grid.26999...       True      False   \n",
       "228                     ISNI IDs for this organization       True      False   \n",
       "239                             Child organization IDs       True      False   \n",
       "240                            Parent organization IDs       True      False   \n",
       "241                           Related organization IDs       True      False   \n",
       "242                   OrgRef IDs for this organization       True      False   \n",
       "244                      ROR IDs for this organization       True      False   \n",
       "248                     UCAS IDs for this organization       True      False   \n",
       "249                    UKPRN IDs for this organization       True      False   \n",
       "250                 WikiData IDs for this organization       True      False   \n",
       "252  The Dimensions IDs of the grants linked to the...       True      False   \n",
       "254  The Dimensions ID of the publication linked to...       True      False   \n",
       "276                             Dimensions dataset ID.       True      False   \n",
       "283           The ID of the repository of the dataset.       True      False   \n",
       "\n",
       "     is_facet  \n",
       "1       False  \n",
       "25      False  \n",
       "34      False  \n",
       "35      False  \n",
       "39      False  \n",
       "51      False  \n",
       "89      False  \n",
       "111     False  \n",
       "120     False  \n",
       "133     False  \n",
       "143     False  \n",
       "146     False  \n",
       "154     False  \n",
       "171     False  \n",
       "177     False  \n",
       "193     False  \n",
       "195     False  \n",
       "208     False  \n",
       "212     False  \n",
       "214     False  \n",
       "221     False  \n",
       "225     False  \n",
       "226     False  \n",
       "227     False  \n",
       "228     False  \n",
       "239     False  \n",
       "240     False  \n",
       "241     False  \n",
       "242     False  \n",
       "244     False  \n",
       "248     False  \n",
       "249     False  \n",
       "250     False  \n",
       "252     False  \n",
       "254     False  \n",
       "276     False  \n",
       "283      True  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%dsldocs\n",
    "dsl_last_results[dsl_last_results['field'].str.contains('id')==True]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "Collapsed": "false",
    "colab_type": "text",
    "id": "6FrQXOGoXCrn"
   },
   "source": [
    "### What are the external entities that we can put in a list?\n",
    "\n",
    "* a list of ISSN's\n",
    "* a list of External Grant IDs\n",
    "* a list of DOIs\n",
    "* a list of categories"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "Collapsed": "false",
    "colab_type": "text",
    "id": "tJptOpqtoeEZ"
   },
   "source": [
    "## 3. Making a list from the results of a query\n",
    "\n",
    "The list syntax for the Dimensions API is the same as the list syntax for json, so we can use python's json-to-string functions to make a list of ids for us from the previous query.\n",
    "\n",
    "Let's run our example query again."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "Collapsed": "false",
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 638
    },
    "colab_type": "code",
    "id": "pTapxr7eUt29",
    "outputId": "7b32a07c-9a01-4a13-e904-5ec5c2b7526a"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Returned Publications: 100 (total = 39938)\n",
      "\u001b[2mTime: 0.51s\u001b[0m\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>pub.1128910744</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>pub.1125408894</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>pub.1125679504</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>pub.1121881108</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>pub.1125399511</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95</th>\n",
       "      <td>pub.1130154967</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>96</th>\n",
       "      <td>pub.1130473004</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>97</th>\n",
       "      <td>pub.1130565969</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98</th>\n",
       "      <td>pub.1129877063</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99</th>\n",
       "      <td>pub.1130210026</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>100 rows × 1 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                id\n",
       "0   pub.1128910744\n",
       "1   pub.1125408894\n",
       "2   pub.1125679504\n",
       "3   pub.1121881108\n",
       "4   pub.1125399511\n",
       "..             ...\n",
       "95  pub.1130154967\n",
       "96  pub.1130473004\n",
       "97  pub.1130565969\n",
       "98  pub.1129877063\n",
       "99  pub.1130210026\n",
       "\n",
       "[100 rows x 1 columns]"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%dsldf\n",
    "search publications \n",
    "where research_orgs.id in [\"grid.1008.9\",\"grid.1002.3\"]\n",
    "  and year in [2019:2020]\n",
    "return publications[id] \n",
    "limit 100"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "Collapsed": "false",
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 55
    },
    "colab_type": "code",
    "id": "_VTwdnK2ioHm",
    "outputId": "172cfaf1-598a-49ad-efc8-01368c5928de"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'[\"pub.1128910744\", \"pub.1125408894\", \"pub.1125679504\", \"pub.1121881108\", \"pub.1125399511\", \"pub.1125025149\", \"pub.1129750783\", \"pub.1129934894\", \"pub.1116652110\", \"pub.1130428426\", \"pub.1125617654\", \"pub.1125508088\", \"pub.1125663277\", \"pub.1127397677\", \"pub.1128670172\", \"pub.1129738952\", \"pub.1129927065\", \"pub.1125488818\", \"pub.1127579881\", \"pub.1129330483\", \"pub.1129969190\", \"pub.1124060229\", \"pub.1130469744\", \"pub.1128526965\", \"pub.1127449188\", \"pub.1128910055\", \"pub.1129152052\", \"pub.1128835792\", \"pub.1128553673\", \"pub.1127171381\", \"pub.1128188711\", \"pub.1124550366\", \"pub.1127403602\", \"pub.1126704737\", \"pub.1126705781\", \"pub.1126697386\", \"pub.1128490805\", \"pub.1127453116\", \"pub.1128581013\", \"pub.1125617777\", \"pub.1125902856\", \"pub.1125545402\", \"pub.1128250005\", \"pub.1129711942\", \"pub.1124633600\", \"pub.1125753634\", \"pub.1125756054\", \"pub.1128670125\", \"pub.1127351832\", \"pub.1125664038\", \"pub.1126125606\", \"pub.1124372639\", \"pub.1124670593\", \"pub.1127514900\", \"pub.1126502051\", \"pub.1126013995\", \"pub.1129038309\", \"pub.1129100811\", \"pub.1126702062\", \"pub.1129384636\", \"pub.1129492233\", \"pub.1124830567\", \"pub.1129357934\", \"pub.1129327398\", \"pub.1125516023\", \"pub.1130259916\", \"pub.1130003198\", \"pub.1130128246\", \"pub.1129417550\", \"pub.1128978928\", \"pub.1129155555\", \"pub.1130240573\", \"pub.1130286746\", \"pub.1125502024\", \"pub.1129668495\", \"pub.1125609619\", \"pub.1127726353\", \"pub.1124284911\", \"pub.1124342595\", \"pub.1124132392\", \"pub.1125488824\", \"pub.1128939571\", \"pub.1125488819\", \"pub.1125152336\", \"pub.1129605398\", \"pub.1128877084\", \"pub.1129604079\", \"pub.1127419474\", \"pub.1125402193\", \"pub.1129847614\", \"pub.1128556442\", \"pub.1124885124\", \"pub.1129640786\", \"pub.1127252780\", \"pub.1130469679\", \"pub.1130154967\", \"pub.1130473004\", \"pub.1130565969\", \"pub.1129877063\", \"pub.1130210026\"]'"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "json.dumps(list(dsl_last_results.id))\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "Collapsed": "false",
    "colab_type": "text",
    "id": "YDFFeWd0p7q1"
   },
   "source": [
    "Let's try to use this list of IDs. \n",
    "\n",
    "Unfortunately, you can't just put your results directly into the query"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "Collapsed": "false",
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 86
    },
    "colab_type": "code",
    "id": "k20IChU3pidA",
    "outputId": "21ddd1a1-bbb2-42bf-c852-de1af82d7eb0"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Returned Errors: 1\n",
      "\u001b[2mTime: 0.45s\u001b[0m\n",
      "4 QuerySyntaxErrors found\n",
      "4 ParserErrors found\n",
      "  * [Line 2:15] ('json') no viable alternative at input '[json'\n",
      "  * [Line 2:26] ('list') extraneous input 'list' expecting {'for', 'in', '('}\n",
      "  * [Line 2:31] ('dsl_last_results') mismatched input 'dsl_last_results' expecting {'for', 'in', '('}\n",
      "  * [Line 2:52] (']') extraneous input ']' expecting 'return'\n"
     ]
    }
   ],
   "source": [
    "%%dsldf\n",
    "  search publications\n",
    "  where id in [json.dumps(list(dsl_last_results.id))]\n",
    "\n",
    "  return publications \n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "Collapsed": "false"
   },
   "source": [
    "..so let's get our results back again"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "Collapsed": "false",
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 638
    },
    "colab_type": "code",
    "id": "Ye3gnw4YsA2H",
    "outputId": "bb9f5a8e-8444-44ee-bb67-3bbf83924592"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Returned Publications: 100 (total = 39938)\n",
      "\u001b[2mTime: 0.47s\u001b[0m\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>pub.1128910744</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>pub.1125408894</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>pub.1125679504</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>pub.1121881108</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>pub.1125399511</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95</th>\n",
       "      <td>pub.1130154967</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>96</th>\n",
       "      <td>pub.1130473004</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>97</th>\n",
       "      <td>pub.1130565969</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98</th>\n",
       "      <td>pub.1129877063</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99</th>\n",
       "      <td>pub.1130210026</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>100 rows × 1 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                id\n",
       "0   pub.1128910744\n",
       "1   pub.1125408894\n",
       "2   pub.1125679504\n",
       "3   pub.1121881108\n",
       "4   pub.1125399511\n",
       "..             ...\n",
       "95  pub.1130154967\n",
       "96  pub.1130473004\n",
       "97  pub.1130565969\n",
       "98  pub.1129877063\n",
       "99  pub.1130210026\n",
       "\n",
       "[100 rows x 1 columns]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%dsldf\n",
    "search publications \n",
    "where research_orgs.id in [\"grid.1008.9\",\"grid.1002.3\"]\n",
    "  and year in [2019:2020]\n",
    "return publications[id] \n",
    "limit 100"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "Collapsed": "false",
    "colab_type": "text",
    "id": "TiQQUnbUqHKC"
   },
   "source": [
    "... and use the python way of calling the Dimensions API instead"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "Collapsed": "false",
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 72
    },
    "colab_type": "code",
    "id": "c1FJOuY9qgrl",
    "outputId": "aca0814b-4547-43b9-a1fb-55ec0f5f3e93"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Returned Publications: 20 (total = 100)\n",
      "\u001b[2mTime: 0.55s\u001b[0m\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "'\\n\\n search publications\\n  where id in [\"pub.1128910744\", \"pub.1125408894\", \"pub.1125679504\", \"pub.1121881108\", \"pub.1125399511\", \"pub.1125025149\", \"pub.1129750783\", \"pub.1129934894\", \"pub.1116652110\", \"pub.1130428426\", \"pub.1125617654\", \"pub.1125508088\", \"pub.1125663277\", \"pub.1127397677\", \"pub.1128670172\", \"pub.1129738952\", \"pub.1129927065\", \"pub.1125488818\", \"pub.1127579881\", \"pub.1129330483\", \"pub.1129969190\", \"pub.1124060229\", \"pub.1130469744\", \"pub.1128526965\", \"pub.1127449188\", \"pub.1128910055\", \"pub.1129152052\", \"pub.1128835792\", \"pub.1128553673\", \"pub.1127171381\", \"pub.1128188711\", \"pub.1124550366\", \"pub.1127403602\", \"pub.1126704737\", \"pub.1126705781\", \"pub.1126697386\", \"pub.1128490805\", \"pub.1127453116\", \"pub.1128581013\", \"pub.1125617777\", \"pub.1125902856\", \"pub.1125545402\", \"pub.1128250005\", \"pub.1129711942\", \"pub.1124633600\", \"pub.1125753634\", \"pub.1125756054\", \"pub.1128670125\", \"pub.1127351832\", \"pub.1125664038\", \"pub.1126125606\", \"pub.1124372639\", \"pub.1124670593\", \"pub.1127514900\", \"pub.1126502051\", \"pub.1126013995\", \"pub.1129038309\", \"pub.1129100811\", \"pub.1126702062\", \"pub.1129384636\", \"pub.1129492233\", \"pub.1124830567\", \"pub.1129357934\", \"pub.1129327398\", \"pub.1125516023\", \"pub.1130259916\", \"pub.1130003198\", \"pub.1130128246\", \"pub.1129417550\", \"pub.1128978928\", \"pub.1129155555\", \"pub.1130240573\", \"pub.1130286746\", \"pub.1125502024\", \"pub.1129668495\", \"pub.1125609619\", \"pub.1127726353\", \"pub.1124284911\", \"pub.1124342595\", \"pub.1124132392\", \"pub.1125488824\", \"pub.1128939571\", \"pub.1125488819\", \"pub.1125152336\", \"pub.1129605398\", \"pub.1128877084\", \"pub.1129604079\", \"pub.1127419474\", \"pub.1125402193\", \"pub.1129847614\", \"pub.1128556442\", \"pub.1124885124\", \"pub.1129640786\", \"pub.1127252780\", \"pub.1130469679\", \"pub.1130154967\", \"pub.1130473004\", \"pub.1130565969\", \"pub.1129877063\", \"pub.1130210026\"]\\n\\n  return publications\\n\\n\\n'"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dsl.query(f\"\"\"\n",
    "\n",
    " search publications\n",
    "  where id in {json.dumps(list(dsl_last_results.id))}\n",
    "\n",
    "  return publications\n",
    "\n",
    "\n",
    "\"\"\").as_dataframe()\n",
    "\n",
    "f\"\"\"\n",
    "\n",
    " search publications\n",
    "  where id in {json.dumps(list(dsl_last_results.id))}\n",
    "\n",
    "  return publications\n",
    "\n",
    "\n",
    "\"\"\""
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "Collapsed": "false",
    "colab_type": "text",
    "id": "JtKVHvzSs9-B"
   },
   "source": [
    "### Putting both parts of this example together"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "Collapsed": "false",
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 588
    },
    "colab_type": "code",
    "id": "cgWbz4getPna",
    "outputId": "dc44cfd5-68a4-401a-e66f-d2b5763ffb11"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Returned Publications: 100 (total = 39938)\n",
      "\u001b[2mTime: 0.47s\u001b[0m\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-100 / 100 (0.98s)\n",
      "===\n",
      "Records extracted: 100\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>title</th>\n",
       "      <th>volume</th>\n",
       "      <th>issue</th>\n",
       "      <th>pages</th>\n",
       "      <th>type</th>\n",
       "      <th>year</th>\n",
       "      <th>author_affiliations</th>\n",
       "      <th>journal.id</th>\n",
       "      <th>journal.title</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>pub.1128910744</td>\n",
       "      <td>“Surviving not thriving”: experiences of healt...</td>\n",
       "      <td>25</td>\n",
       "      <td>1</td>\n",
       "      <td>809-823</td>\n",
       "      <td>article</td>\n",
       "      <td>2020</td>\n",
       "      <td>[[{'first_name': 'Madelaine', 'last_name': 'Sm...</td>\n",
       "      <td>jour.1097842</td>\n",
       "      <td>International Journal of Adolescence and Youth</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>pub.1125408894</td>\n",
       "      <td>Posttraumatic anger: a confirmatory factor ana...</td>\n",
       "      <td>11</td>\n",
       "      <td>1</td>\n",
       "      <td>1731127</td>\n",
       "      <td>article</td>\n",
       "      <td>2020</td>\n",
       "      <td>[[{'first_name': 'Grazia', 'last_name': 'Cesch...</td>\n",
       "      <td>jour.1045059</td>\n",
       "      <td>European Journal of Psychotraumatology</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>pub.1125679504</td>\n",
       "      <td>Direct assessment of mental health and metabol...</td>\n",
       "      <td>13</td>\n",
       "      <td>1</td>\n",
       "      <td>1732665</td>\n",
       "      <td>article</td>\n",
       "      <td>2020</td>\n",
       "      <td>[[{'first_name': 'Peter S', 'last_name': 'Azzo...</td>\n",
       "      <td>jour.1041075</td>\n",
       "      <td>Global Health Action</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>pub.1121881108</td>\n",
       "      <td>The large-scale implementation and evaluation ...</td>\n",
       "      <td>25</td>\n",
       "      <td>1</td>\n",
       "      <td>1-11</td>\n",
       "      <td>article</td>\n",
       "      <td>2020</td>\n",
       "      <td>[[{'first_name': 'Bengianni', 'last_name': 'Pi...</td>\n",
       "      <td>jour.1097842</td>\n",
       "      <td>International Journal of Adolescence and Youth</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>pub.1125399511</td>\n",
       "      <td>Structural brain changes with lifetime trauma ...</td>\n",
       "      <td>11</td>\n",
       "      <td>1</td>\n",
       "      <td>1733247</td>\n",
       "      <td>article</td>\n",
       "      <td>2020</td>\n",
       "      <td>[[{'first_name': 'Marie-Laure', 'last_name': '...</td>\n",
       "      <td>jour.1045059</td>\n",
       "      <td>European Journal of Psychotraumatology</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               id                                              title volume  \\\n",
       "0  pub.1128910744  “Surviving not thriving”: experiences of healt...     25   \n",
       "1  pub.1125408894  Posttraumatic anger: a confirmatory factor ana...     11   \n",
       "2  pub.1125679504  Direct assessment of mental health and metabol...     13   \n",
       "3  pub.1121881108  The large-scale implementation and evaluation ...     25   \n",
       "4  pub.1125399511  Structural brain changes with lifetime trauma ...     11   \n",
       "\n",
       "  issue    pages     type  year  \\\n",
       "0     1  809-823  article  2020   \n",
       "1     1  1731127  article  2020   \n",
       "2     1  1732665  article  2020   \n",
       "3     1     1-11  article  2020   \n",
       "4     1  1733247  article  2020   \n",
       "\n",
       "                                 author_affiliations    journal.id  \\\n",
       "0  [[{'first_name': 'Madelaine', 'last_name': 'Sm...  jour.1097842   \n",
       "1  [[{'first_name': 'Grazia', 'last_name': 'Cesch...  jour.1045059   \n",
       "2  [[{'first_name': 'Peter S', 'last_name': 'Azzo...  jour.1041075   \n",
       "3  [[{'first_name': 'Bengianni', 'last_name': 'Pi...  jour.1097842   \n",
       "4  [[{'first_name': 'Marie-Laure', 'last_name': '...  jour.1045059   \n",
       "\n",
       "                                    journal.title  \n",
       "0  International Journal of Adolescence and Youth  \n",
       "1          European Journal of Psychotraumatology  \n",
       "2                            Global Health Action  \n",
       "3  International Journal of Adolescence and Youth  \n",
       "4          European Journal of Psychotraumatology  "
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Step 1. Get the list of publications..\n",
    "\n",
    "pubs = dsl.query(\"\"\"\n",
    "                  search publications \n",
    "                    where research_orgs.id in [\"grid.1008.9\",\"grid.1002.3\"]\n",
    "                      and year in [2019:2020]\n",
    "                    return publications[id] \n",
    "                    limit 100\n",
    "                \"\"\").as_dataframe()\n",
    "\n",
    "# Step 2. Put the list into the next query...\n",
    "\n",
    "dsl.query_iterative(f\"\"\"\n",
    "                 search publications\n",
    "                    where id in {json.dumps(list(pubs.id))}\n",
    "                    return publications\n",
    "\"\"\").as_dataframe().head(5)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "Collapsed": "false",
    "colab_type": "text",
    "id": "3P2FgepKubGn"
   },
   "source": [
    "### Doing something useful: Get all the publications that cite my publications"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "Collapsed": "false",
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 539
    },
    "colab_type": "code",
    "id": "agGScHFyut1d",
    "outputId": "6fdae968-9f5f-475b-dde5-422b4d703653"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Returned Publications: 100 (total = 39938)\n",
      "\u001b[2mTime: 0.46s\u001b[0m\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-47 / 47 (0.61s)\n",
      "===\n",
      "Records extracted: 47\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>title</th>\n",
       "      <th>pages</th>\n",
       "      <th>author_affiliations</th>\n",
       "      <th>year</th>\n",
       "      <th>issue</th>\n",
       "      <th>id</th>\n",
       "      <th>type</th>\n",
       "      <th>volume</th>\n",
       "      <th>journal.id</th>\n",
       "      <th>journal.title</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Non-photochemical quenching, a non-invasive pr...</td>\n",
       "      <td>32-43</td>\n",
       "      <td>[[{'first_name': 'Pranali', 'last_name': 'Deor...</td>\n",
       "      <td>2020</td>\n",
       "      <td>1</td>\n",
       "      <td>pub.1125663277</td>\n",
       "      <td>article</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Distribution and pyrethroid resistance status ...</td>\n",
       "      <td>213</td>\n",
       "      <td>[[{'first_name': 'Hitoshi', 'last_name': 'Kawa...</td>\n",
       "      <td>2020</td>\n",
       "      <td>1</td>\n",
       "      <td>pub.1126895840</td>\n",
       "      <td>article</td>\n",
       "      <td>13</td>\n",
       "      <td>jour.1039458</td>\n",
       "      <td>Parasites &amp; Vectors</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Reducing ignorance about who dies of what: res...</td>\n",
       "      <td>58</td>\n",
       "      <td>[[{'first_name': 'Alan D.', 'last_name': 'Lope...</td>\n",
       "      <td>2020</td>\n",
       "      <td>1</td>\n",
       "      <td>pub.1125488824</td>\n",
       "      <td>article</td>\n",
       "      <td>18</td>\n",
       "      <td>jour.1032885</td>\n",
       "      <td>BMC Medicine</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Wolbachia: a possible weapon for controlling d...</td>\n",
       "      <td>50</td>\n",
       "      <td>[[{'first_name': 'Sujan', 'last_name': 'Khadka...</td>\n",
       "      <td>2020</td>\n",
       "      <td>1</td>\n",
       "      <td>pub.1128670136</td>\n",
       "      <td>article</td>\n",
       "      <td>48</td>\n",
       "      <td>jour.1312315</td>\n",
       "      <td>Tropical Medicine and Health</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Can increasing years of schooling reduce type ...</td>\n",
       "      <td>12908</td>\n",
       "      <td>[[{'first_name': 'Charleen D.', 'last_name': '...</td>\n",
       "      <td>2020</td>\n",
       "      <td>1</td>\n",
       "      <td>pub.1129772083</td>\n",
       "      <td>article</td>\n",
       "      <td>10</td>\n",
       "      <td>jour.1045337</td>\n",
       "      <td>Scientific Reports</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                               title  pages  \\\n",
       "0  Non-photochemical quenching, a non-invasive pr...  32-43   \n",
       "1  Distribution and pyrethroid resistance status ...    213   \n",
       "2  Reducing ignorance about who dies of what: res...     58   \n",
       "3  Wolbachia: a possible weapon for controlling d...     50   \n",
       "4  Can increasing years of schooling reduce type ...  12908   \n",
       "\n",
       "                                 author_affiliations  year issue  \\\n",
       "0  [[{'first_name': 'Pranali', 'last_name': 'Deor...  2020     1   \n",
       "1  [[{'first_name': 'Hitoshi', 'last_name': 'Kawa...  2020     1   \n",
       "2  [[{'first_name': 'Alan D.', 'last_name': 'Lope...  2020     1   \n",
       "3  [[{'first_name': 'Sujan', 'last_name': 'Khadka...  2020     1   \n",
       "4  [[{'first_name': 'Charleen D.', 'last_name': '...  2020     1   \n",
       "\n",
       "               id     type volume    journal.id                 journal.title  \n",
       "0  pub.1125663277  article      1           NaN                           NaN  \n",
       "1  pub.1126895840  article     13  jour.1039458           Parasites & Vectors  \n",
       "2  pub.1125488824  article     18  jour.1032885                  BMC Medicine  \n",
       "3  pub.1128670136  article     48  jour.1312315  Tropical Medicine and Health  \n",
       "4  pub.1129772083  article     10  jour.1045337            Scientific Reports  "
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pubs = dsl.query(\"\"\"\n",
    "                  search publications \n",
    "                    where research_orgs.id in [\"grid.1008.9\",\"grid.1002.3\"]\n",
    "                      and year in [2019:2020]\n",
    "                    return publications[id] \n",
    "                    limit 100\n",
    "                \"\"\")\n",
    "\n",
    "mypubslist = json.dumps(list(pubs.as_dataframe().id))\n",
    "\n",
    "dsl.query_iterative(f\"\"\"\n",
    "                 search publications\n",
    "                    where reference_ids in {mypubslist}\n",
    "                    return publications\n",
    "\"\"\").as_dataframe().head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "Collapsed": "false",
    "colab_type": "text",
    "id": "6N56B_fywENB"
   },
   "source": [
    "## 5. How Long can lists get?  \n",
    "It is a bit dependent on string length, plus a fixed length of 512 items"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "Collapsed": "false",
    "colab_type": "text",
    "id": "bOOG9cpJwgmM"
   },
   "source": [
    "### This won't work"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "Collapsed": "false",
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 104
    },
    "colab_type": "code",
    "id": "vOOf_sicwNVH",
    "outputId": "fe5eca36-7994-4ac9-b35f-ab57b607c8bd"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Returned Publications: 1000 (total = 39938)\n",
      "\u001b[2mTime: 0.50s\u001b[0m\n",
      "Returned Errors: 1\n",
      "\u001b[2mTime: 1.11s\u001b[0m\n",
      "Semantic Error\n",
      "Semantic errors found:\n",
      "\tFilter operator 'in' requires 0 < items < 512. '1000 is out of this range'.\n"
     ]
    }
   ],
   "source": [
    "pubs = dsl.query(\"\"\"\n",
    "                  search publications \n",
    "                    where research_orgs.id in [\"grid.1008.9\",\"grid.1002.3\"]\n",
    "                      and year in [2019:2020]\n",
    "                    return publications[id] \n",
    "                    limit 1000\n",
    "                \"\"\")\n",
    "\n",
    "mypubslist = json.dumps(list(pubs.as_dataframe().id))\n",
    "\n",
    "dsl.query(f\"\"\"\n",
    "                 search publications\n",
    "                    where reference_ids in {mypubslist}\n",
    "                    return publications\n",
    "\"\"\").as_dataframe()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "Collapsed": "false",
    "colab_type": "text",
    "id": "yj4rqFsRwykl"
   },
   "source": [
    "### This will"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "Collapsed": "false",
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 247
    },
    "colab_type": "code",
    "id": "AAAygpY1wr6_",
    "outputId": "87cef1b4-12a1-4d62-ddff-4cf0ff967491"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Returned Publications: 250 (total = 39938)\n",
      "\u001b[2mTime: 0.59s\u001b[0m\n",
      "Returned Publications: 20 (total = 168)\n",
      "\u001b[2mTime: 0.98s\u001b[0m\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>title</th>\n",
       "      <th>pages</th>\n",
       "      <th>author_affiliations</th>\n",
       "      <th>year</th>\n",
       "      <th>issue</th>\n",
       "      <th>id</th>\n",
       "      <th>type</th>\n",
       "      <th>volume</th>\n",
       "      <th>journal.id</th>\n",
       "      <th>journal.title</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Non-photochemical quenching, a non-invasive pr...</td>\n",
       "      <td>32-43</td>\n",
       "      <td>[[{'first_name': 'Pranali', 'last_name': 'Deor...</td>\n",
       "      <td>2020</td>\n",
       "      <td>1</td>\n",
       "      <td>pub.1125663277</td>\n",
       "      <td>article</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Predicting breast cancer risk using interactin...</td>\n",
       "      <td>11044</td>\n",
       "      <td>[[{'first_name': 'Hamid', 'last_name': 'Behrav...</td>\n",
       "      <td>2020</td>\n",
       "      <td>1</td>\n",
       "      <td>pub.1129015188</td>\n",
       "      <td>article</td>\n",
       "      <td>10</td>\n",
       "      <td>jour.1045337</td>\n",
       "      <td>Scientific Reports</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                               title  pages  \\\n",
       "0  Non-photochemical quenching, a non-invasive pr...  32-43   \n",
       "1  Predicting breast cancer risk using interactin...  11044   \n",
       "\n",
       "                                 author_affiliations  year issue  \\\n",
       "0  [[{'first_name': 'Pranali', 'last_name': 'Deor...  2020     1   \n",
       "1  [[{'first_name': 'Hamid', 'last_name': 'Behrav...  2020     1   \n",
       "\n",
       "               id     type volume    journal.id       journal.title  \n",
       "0  pub.1125663277  article      1           NaN                 NaN  \n",
       "1  pub.1129015188  article     10  jour.1045337  Scientific Reports  "
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pubs = dsl.query(\"\"\"\n",
    "                  search publications \n",
    "                    where research_orgs.id in [\"grid.1008.9\",\"grid.1002.3\"]\n",
    "                      and year in [2019:2020]\n",
    "                    return publications[id] \n",
    "                    limit 250\n",
    "                \"\"\")\n",
    "\n",
    "mypubslist = json.dumps(list(pubs.as_dataframe().id))\n",
    "\n",
    "dsl.query(f\"\"\"\n",
    "                 search publications\n",
    "                    where reference_ids in {mypubslist}\n",
    "                    return publications\n",
    "\"\"\").as_dataframe().head(2)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "Collapsed": "false",
    "colab_type": "text",
    "id": "GfoSgB5Qw8Na"
   },
   "source": [
    "### What if I need a very long list?\n",
    "\n",
    "The [Dimcli](https://github.com/lambdamusic/dimcli) library can break up your query into chunks. \n",
    "\n",
    "We then loop through each chunk - get the result, and stick them back together again at the end."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "Collapsed": "false",
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 315
    },
    "colab_type": "code",
    "id": "vIeiFpG7xQBI",
    "outputId": "70b0ba0e-0795-43a6-a597-bccb688344a4"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Returned Publications: 1000 (total = 39938)\n",
      "\u001b[2mTime: 0.87s\u001b[0m\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-167 / 167 (2.92s)\n",
      "===\n",
      "Records extracted: 167\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-218 / 218 (1.16s)\n",
      "===\n",
      "Records extracted: 218\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-262 / 262 (1.29s)\n",
      "===\n",
      "Records extracted: 262\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-74 / 74 (0.75s)\n",
      "===\n",
      "Records extracted: 74\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>title</th>\n",
       "      <th>volume</th>\n",
       "      <th>issue</th>\n",
       "      <th>pages</th>\n",
       "      <th>type</th>\n",
       "      <th>year</th>\n",
       "      <th>author_affiliations</th>\n",
       "      <th>journal.id</th>\n",
       "      <th>journal.title</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>pub.1125663277</td>\n",
       "      <td>Non-photochemical quenching, a non-invasive pr...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>32-43</td>\n",
       "      <td>article</td>\n",
       "      <td>2020</td>\n",
       "      <td>[[{'first_name': 'Pranali', 'last_name': 'Deor...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>pub.1126895840</td>\n",
       "      <td>Distribution and pyrethroid resistance status ...</td>\n",
       "      <td>13</td>\n",
       "      <td>1</td>\n",
       "      <td>213</td>\n",
       "      <td>article</td>\n",
       "      <td>2020</td>\n",
       "      <td>[[{'first_name': 'Hitoshi', 'last_name': 'Kawa...</td>\n",
       "      <td>jour.1039458</td>\n",
       "      <td>Parasites &amp; Vectors</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               id                                              title volume  \\\n",
       "0  pub.1125663277  Non-photochemical quenching, a non-invasive pr...      1   \n",
       "1  pub.1126895840  Distribution and pyrethroid resistance status ...     13   \n",
       "\n",
       "  issue  pages     type  year  \\\n",
       "0     1  32-43  article  2020   \n",
       "1     1    213  article  2020   \n",
       "\n",
       "                                 author_affiliations    journal.id  \\\n",
       "0  [[{'first_name': 'Pranali', 'last_name': 'Deor...           NaN   \n",
       "1  [[{'first_name': 'Hitoshi', 'last_name': 'Kawa...  jour.1039458   \n",
       "\n",
       "         journal.title  \n",
       "0                  NaN  \n",
       "1  Parasites & Vectors  "
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Step 1 - same as before - except now we want the query in chunks\n",
    "\n",
    "pubs_chunks = dsl.query(\"\"\"\n",
    "                  search publications \n",
    "                    where research_orgs.id in [\"grid.1008.9\",\"grid.1002.3\"]\n",
    "                      and year in [2019:2020]\n",
    "                    return publications[id] \n",
    "                    limit 1000\n",
    "                \"\"\").chunks(250)\n",
    "\n",
    "# Step 2 - almost the same as before - except now we use a for loop to loop through our results\n",
    "\n",
    "query_results = []\n",
    "\n",
    "for c in pubs_chunks:\n",
    "\n",
    "      mypubslist = json.dumps(list(pd.DataFrame(c).id))\n",
    "\n",
    "      query_results.append(\n",
    "          \n",
    "                  dsl.query_iterative(f\"\"\"\n",
    "                        search publications\n",
    "                            where reference_ids in {mypubslist}\n",
    "                            return publications\n",
    "                        \"\"\").as_dataframe()\n",
    "      )\n",
    "\n",
    "# Step 3 - join our results back together again, and get rid of duplicates\n",
    "\n",
    "pd.concat(query_results).\\\n",
    "   drop_duplicates(subset='id').\\\n",
    "   head(2)\n",
    "   \n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "Collapsed": "false",
    "colab_type": "text",
    "id": "xwU4CPojEPGY"
   },
   "source": [
    "## 6. What if I want to get the researchers associated with the publications the cite my institution?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "Collapsed": "false",
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 104
    },
    "colab_type": "code",
    "id": "JvdepDGpENSa",
    "outputId": "ce5fd4a8-fb98-4a9c-9e3b-34db380f2edc"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Returned Publications: 1000 (total = 39938)\n",
      "\u001b[2mTime: 0.46s\u001b[0m\n",
      "Returned Researchers: 1000\n",
      "\u001b[2mTime: 1.48s\u001b[0m\n",
      "Returned Researchers: 1000\n",
      "\u001b[2mTime: 1.43s\u001b[0m\n",
      "Returned Researchers: 1000\n",
      "\u001b[2mTime: 1.29s\u001b[0m\n",
      "Returned Researchers: 293\n",
      "\u001b[2mTime: 1.02s\u001b[0m\n"
     ]
    }
   ],
   "source": [
    "# Step 1 - same as before\n",
    "\n",
    "pubs_chunks = dsl.query(\"\"\"\n",
    "                  search publications \n",
    "                    where research_orgs.id in [\"grid.1008.9\",\"grid.1002.3\"]\n",
    "                      and year in [2019:2020]\n",
    "                    return publications[id] \n",
    "                    limit 1000\n",
    "                \"\"\").chunks(250)\n",
    "\n",
    "query_results = []\n",
    "\n",
    "# Step 2 same as before, but now I returning researchers instead of publications\n",
    "\n",
    "for c in pubs_chunks:\n",
    "\n",
    "      mypubslist = json.dumps(list(pd.DataFrame(c).id))\n",
    "\n",
    "      query_results.append(\n",
    "          \n",
    "                  dsl.query(f\"\"\"\n",
    "                        search publications\n",
    "                            where reference_ids in {mypubslist}\n",
    "                            return researchers limit 1000\n",
    "                        \"\"\").as_dataframe() \n",
    "      # Warning 1, If there are more than 1000 researchers involved in this query, you will miss some\n",
    "      )\n",
    "\n",
    "# Step 3 join the queries back together, this time using a groupby statement to join the counts back together again\n",
    "\n",
    "my_researchers = pd.concat(query_results).\\\n",
    "                 groupby(['id','first_name','last_name']).\\\n",
    "                  agg({'count':'sum'}).\\\n",
    "                  sort_values(by='count', ascending=False).\\\n",
    "                  head(10)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "Collapsed": "false",
    "colab_type": "text",
    "id": "ynTQdJC-1zPX"
   },
   "source": [
    "## 7. What if I want to get *all* the researchers associated with the publications that cite my institution?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {
    "Collapsed": "false",
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 385
    },
    "colab_type": "code",
    "id": "ou3xHnKXw7VB",
    "outputId": "27c4c8dd-2bd1-42ab-b982-1e4eb81fdf7b"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Returned Publications: 1000 (total = 39938)\n",
      "\u001b[2mTime: 0.46s\u001b[0m\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-167 / 167 (1.42s)\n",
      "===\n",
      "Records extracted: 167\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-218 / 218 (1.11s)\n",
      "===\n",
      "Records extracted: 218\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-262 / 262 (1.26s)\n",
      "===\n",
      "Records extracted: 262\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-74 / 74 (0.87s)\n",
      "===\n",
      "Records extracted: 74\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>researcher_id</th>\n",
       "      <th>first_name</th>\n",
       "      <th>last_name</th>\n",
       "      <th>pub_id</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>ur.013035660527.88</td>\n",
       "      <td>Paul M.</td>\n",
       "      <td>Thompson</td>\n",
       "      <td>16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>ur.0735661630.67</td>\n",
       "      <td>Neda</td>\n",
       "      <td>Jahanshad</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>ur.010365645710.55</td>\n",
       "      <td>Sophia I.</td>\n",
       "      <td>Thomopoulos</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>ur.0627614723.01</td>\n",
       "      <td>Dan J.</td>\n",
       "      <td>Stein</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>ur.01015666354.63</td>\n",
       "      <td>Dick J.</td>\n",
       "      <td>Veltman</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>ur.01153670556.36</td>\n",
       "      <td>Carlos M.</td>\n",
       "      <td>Grilo</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>ur.01117110035.48</td>\n",
       "      <td>Nynke A.</td>\n",
       "      <td>Groenewold</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>ur.0652517237.06</td>\n",
       "      <td>Tomáš</td>\n",
       "      <td>Paus</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>ur.0750404115.06</td>\n",
       "      <td>Suzanne</td>\n",
       "      <td>Fraser</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>ur.01056633333.53</td>\n",
       "      <td>Lars T.</td>\n",
       "      <td>Westlye</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        researcher_id first_name    last_name  pub_id\n",
       "0  ur.013035660527.88    Paul M.     Thompson      16\n",
       "1    ur.0735661630.67       Neda    Jahanshad      11\n",
       "2  ur.010365645710.55  Sophia I.  Thomopoulos       9\n",
       "3    ur.0627614723.01     Dan J.        Stein       9\n",
       "4   ur.01015666354.63    Dick J.      Veltman       8\n",
       "5   ur.01153670556.36  Carlos M.        Grilo       7\n",
       "6   ur.01117110035.48   Nynke A.   Groenewold       6\n",
       "7    ur.0652517237.06      Tomáš         Paus       6\n",
       "8    ur.0750404115.06    Suzanne       Fraser       5\n",
       "9   ur.01056633333.53    Lars T.      Westlye       5"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Step 1 - same as before\n",
    "\n",
    "pubs_chunks = dsl.query(\"\"\"\n",
    "                  search publications \n",
    "                    where research_orgs.id in [\"grid.1008.9\",\"grid.1002.3\"]\n",
    "                      and year in [2019:2020]\n",
    "                    return publications[id] \n",
    "                    limit 1000\n",
    "                \"\"\").chunks(250)\n",
    "\n",
    "query_results = []\n",
    "\n",
    "# Step 2 - almost the same as before - \n",
    "#          except now we are asking for the as_dataframe_authors data frame\n",
    "\n",
    "for c in pubs_chunks:\n",
    "\n",
    "      mypubslist = json.dumps(list(pd.DataFrame(c).id))\n",
    "\n",
    "      query_results.append(\n",
    "          \n",
    "                  dsl.query_iterative(f\"\"\"\n",
    "                        search publications\n",
    "                            where reference_ids in {mypubslist}\n",
    "                            return publications[id+title+authors]\n",
    "                        \"\"\").as_dataframe_authors() # I have changed this line from as_dataframe to as_datframe_authors\n",
    "      )\n",
    "\n",
    "# Step 3 - join the publications back together\n",
    "\n",
    "researcher_pubs = pd.concat(query_results).\\\n",
    "                drop_duplicates(subset=['researcher_id','pub_id'])\n",
    "\n",
    "\n",
    "# Step 4 - count up the publications using a groupby statement\n",
    "\n",
    "my_researchers = researcher_pubs[researcher_pubs['researcher_id'] != ''].\\\n",
    "    groupby(['researcher_id']).\\\n",
    "    agg({'first_name':'max','last_name':'max','pub_id':'count'}).\\\n",
    "    sort_values(by='pub_id', ascending=False).\\\n",
    "    reset_index()\n",
    "    \n",
    "my_researchers.\\\n",
    "    head(10)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "Collapsed": "false",
    "colab_type": "text",
    "id": "X8ZXvlx3gP9s"
   },
   "source": [
    "## 8. ..and if we want details about our researchers, we can put our list of researchers into the researcher API\n",
    "\n",
    "See [the researcher source docs](https://docs.dimensions.ai/dsl/datasource-researchers.html) for more details."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {
    "Collapsed": "false",
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 492
    },
    "colab_type": "code",
    "id": "DhxG-z1aIoYq",
    "outputId": "eefc09bd-e262-4dd8-d6dd-6c6c4bcc97fd"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-250 / 250 (2.62s)\n",
      "===\n",
      "Records extracted: 250\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-250 / 250 (1.47s)\n",
      "===\n",
      "Records extracted: 250\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-250 / 250 (1.63s)\n",
      "===\n",
      "Records extracted: 250\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-250 / 250 (1.38s)\n",
      "===\n",
      "Records extracted: 250\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-250 / 250 (1.29s)\n",
      "===\n",
      "Records extracted: 250\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-250 / 250 (1.24s)\n",
      "===\n",
      "Records extracted: 250\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-250 / 250 (1.12s)\n",
      "===\n",
      "Records extracted: 250\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-250 / 250 (1.22s)\n",
      "===\n",
      "Records extracted: 250\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-250 / 250 (1.77s)\n",
      "===\n",
      "Records extracted: 250\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-250 / 250 (1.12s)\n",
      "===\n",
      "Records extracted: 250\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-250 / 250 (1.12s)\n",
      "===\n",
      "Records extracted: 250\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-250 / 250 (1.25s)\n",
      "===\n",
      "Records extracted: 250\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-250 / 250 (1.16s)\n",
      "===\n",
      "Records extracted: 250\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-250 / 250 (1.15s)\n",
      "===\n",
      "Records extracted: 250\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-250 / 250 (1.11s)\n",
      "===\n",
      "Records extracted: 250\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-250 / 250 (1.16s)\n",
      "===\n",
      "Records extracted: 250\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-250 / 250 (1.14s)\n",
      "===\n",
      "Records extracted: 250\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-250 / 250 (1.17s)\n",
      "===\n",
      "Records extracted: 250\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-250 / 250 (1.27s)\n",
      "===\n",
      "Records extracted: 250\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-40 / 40 (0.63s)\n",
      "===\n",
      "Records extracted: 40\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>first_name</th>\n",
       "      <th>last_name</th>\n",
       "      <th>research_orgs</th>\n",
       "      <th>orcid_id</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>ur.01262341717.29</td>\n",
       "      <td>Eric T</td>\n",
       "      <td>Hahnen</td>\n",
       "      <td>[{'id': 'grid.411668.c', 'types': ['Healthcare...</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>ur.01264721100.06</td>\n",
       "      <td>Daniel</td>\n",
       "      <td>Barrowdale</td>\n",
       "      <td>[{'id': 'grid.5335.0', 'types': ['Education'],...</td>\n",
       "      <td>[0000-0003-1661-3939]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>ur.0743471221.03</td>\n",
       "      <td>Tjoung-Won</td>\n",
       "      <td>Park-Simon</td>\n",
       "      <td>[{'id': 'grid.4562.5', 'types': ['Education'],...</td>\n",
       "      <td>[0000-0002-2863-3040]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>ur.01105220501.02</td>\n",
       "      <td>Maria Adelaide</td>\n",
       "      <td>Caligo</td>\n",
       "      <td>[{'id': 'grid.5395.a', 'types': ['Education'],...</td>\n",
       "      <td>[0000-0003-0589-1829]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>ur.01116254763.53</td>\n",
       "      <td>Jonathan P</td>\n",
       "      <td>Tyrer</td>\n",
       "      <td>[{'id': 'grid.470869.4', 'types': ['Facility']...</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  id      first_name   last_name  \\\n",
       "0  ur.01262341717.29          Eric T      Hahnen   \n",
       "1  ur.01264721100.06          Daniel  Barrowdale   \n",
       "2   ur.0743471221.03      Tjoung-Won  Park-Simon   \n",
       "3  ur.01105220501.02  Maria Adelaide      Caligo   \n",
       "4  ur.01116254763.53      Jonathan P       Tyrer   \n",
       "\n",
       "                                       research_orgs               orcid_id  \n",
       "0  [{'id': 'grid.411668.c', 'types': ['Healthcare...                    NaN  \n",
       "1  [{'id': 'grid.5335.0', 'types': ['Education'],...  [0000-0003-1661-3939]  \n",
       "2  [{'id': 'grid.4562.5', 'types': ['Education'],...  [0000-0002-2863-3040]  \n",
       "3  [{'id': 'grid.5395.a', 'types': ['Education'],...  [0000-0003-0589-1829]  \n",
       "4  [{'id': 'grid.470869.4', 'types': ['Facility']...                    NaN  "
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "## First, we need to chunk up our researcher list\n",
    "\n",
    "query_results = []\n",
    "\n",
    "for g, rschr in my_researchers.groupby(np.arange(len(my_researchers)) // 250):\n",
    "          # This does *almost* the same thing as the chunks command used above\n",
    "     \n",
    "     myreslist = json.dumps(list(rschr.researcher_id))\n",
    "\n",
    "     query_results.append(\n",
    "          \n",
    "                  dsl.query_iterative(f\"\"\"\n",
    "                        search researchers\n",
    "                            where id in {myreslist}\n",
    "                            return researchers\n",
    "                        \"\"\").as_dataframe() # \n",
    "      )    \n",
    "\n",
    "\n",
    "pd.concat(query_results).head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "Collapsed": "false",
    "colab_type": "text",
    "id": "6Dn_GCfmNE-X"
   },
   "source": [
    "## 9. Patents example (patents -> publications)\n",
    "\n",
    "Using the same method, we can retrieve all patents citing publications from my institution. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {
    "Collapsed": "false",
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 110
    },
    "colab_type": "code",
    "id": "G31vojLOMgzN",
    "outputId": "389dae6b-6471-4380-dbd0-e4ed3c8100fa"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sources</th>\n",
       "      <th>field</th>\n",
       "      <th>type</th>\n",
       "      <th>description</th>\n",
       "      <th>is_filter</th>\n",
       "      <th>is_entity</th>\n",
       "      <th>is_facet</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <td>patents</td>\n",
       "      <td>publication_ids</td>\n",
       "      <td>string</td>\n",
       "      <td>Dimensions IDs of the publications related to ...</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    sources            field    type  \\\n",
       "39  patents  publication_ids  string   \n",
       "\n",
       "                                          description  is_filter  is_entity  \\\n",
       "39  Dimensions IDs of the publications related to ...       True      False   \n",
       "\n",
       "    is_facet  \n",
       "39     False  "
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%dsldocs patents\n",
    "dsl_last_results[dsl_last_results['field']=='publication_ids']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {
    "Collapsed": "false",
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 1365
    },
    "colab_type": "code",
    "id": "Vc1tt-7DL2-C",
    "outputId": "36e4bd7f-87bd-48f5-c646-3392f2006d4e"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-1000 / 8388 (2.17s)\n",
      "1000-2000 / 8388 (1.40s)\n",
      "2000-3000 / 8388 (1.14s)\n",
      "3000-4000 / 8388 (2.58s)\n",
      "4000-5000 / 8388 (1.09s)\n",
      "5000-6000 / 8388 (1.15s)\n",
      "6000-7000 / 8388 (0.95s)\n",
      "7000-8000 / 8388 (1.12s)\n",
      "8000-8388 / 8388 (0.89s)\n",
      "===\n",
      "Records extracted: 8388\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-4 / 4 (1.16s)\n",
      "===\n",
      "Records extracted: 4\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "===\n",
      "Records extracted: 0\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "===\n",
      "Records extracted: 0\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-3 / 3 (0.69s)\n",
      "===\n",
      "Records extracted: 3\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-4 / 4 (0.77s)\n",
      "===\n",
      "Records extracted: 4\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-2 / 2 (0.78s)\n",
      "===\n",
      "Records extracted: 2\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-5 / 5 (0.71s)\n",
      "===\n",
      "Records extracted: 5\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-3 / 3 (0.78s)\n",
      "===\n",
      "Records extracted: 3\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-9 / 9 (0.73s)\n",
      "===\n",
      "Records extracted: 9\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-2 / 2 (0.68s)\n",
      "===\n",
      "Records extracted: 2\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-2 / 2 (0.93s)\n",
      "===\n",
      "Records extracted: 2\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-3 / 3 (0.74s)\n",
      "===\n",
      "Records extracted: 3\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-1 / 1 (0.72s)\n",
      "===\n",
      "Records extracted: 1\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-3 / 3 (0.69s)\n",
      "===\n",
      "Records extracted: 3\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-2 / 2 (0.69s)\n",
      "===\n",
      "Records extracted: 2\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-3 / 3 (0.77s)\n",
      "===\n",
      "Records extracted: 3\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-4 / 4 (0.69s)\n",
      "===\n",
      "Records extracted: 4\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-4 / 4 (0.67s)\n",
      "===\n",
      "Records extracted: 4\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-8 / 8 (0.70s)\n",
      "===\n",
      "Records extracted: 8\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-3 / 3 (0.71s)\n",
      "===\n",
      "Records extracted: 3\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-2 / 2 (1.15s)\n",
      "===\n",
      "Records extracted: 2\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-5 / 5 (0.84s)\n",
      "===\n",
      "Records extracted: 5\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-6 / 6 (0.80s)\n",
      "===\n",
      "Records extracted: 6\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-3 / 3 (0.74s)\n",
      "===\n",
      "Records extracted: 3\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-11 / 11 (0.91s)\n",
      "===\n",
      "Records extracted: 11\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-2 / 2 (0.74s)\n",
      "===\n",
      "Records extracted: 2\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-8 / 8 (0.69s)\n",
      "===\n",
      "Records extracted: 8\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "===\n",
      "Records extracted: 0\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-5 / 5 (0.86s)\n",
      "===\n",
      "Records extracted: 5\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-4 / 4 (0.81s)\n",
      "===\n",
      "Records extracted: 4\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-2 / 2 (0.70s)\n",
      "===\n",
      "Records extracted: 2\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-1 / 1 (0.68s)\n",
      "===\n",
      "Records extracted: 1\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-1 / 1 (0.69s)\n",
      "===\n",
      "Records extracted: 1\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "===\n",
      "Records extracted: 0\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>title</th>\n",
       "      <th>publication_date</th>\n",
       "      <th>assignee_names</th>\n",
       "      <th>year</th>\n",
       "      <th>assignees</th>\n",
       "      <th>inventor_names</th>\n",
       "      <th>times_cited</th>\n",
       "      <th>filing_status</th>\n",
       "      <th>id</th>\n",
       "      <th>granted_year</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>COMPOSITIONS WITH SPECIFIC OLIGOSACCHARIDES TO...</td>\n",
       "      <td>2017-08-03</td>\n",
       "      <td>[NESTEC SA]</td>\n",
       "      <td>2017</td>\n",
       "      <td>[{'id': 'grid.419905.0', 'city_name': 'Vevey',...</td>\n",
       "      <td>[BLANCHARD, CARINE, NEMBRINI, Chiara]</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Application</td>\n",
       "      <td>WO-2017129644-A1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>COMPOSITION FOR USE IN THE PREVENTION AND/OR T...</td>\n",
       "      <td>2017-08-03</td>\n",
       "      <td>[NESTEC SA]</td>\n",
       "      <td>2017</td>\n",
       "      <td>[{'id': 'grid.419905.0', 'city_name': 'Vevey',...</td>\n",
       "      <td>[BLANCHARD, CARINE, NEMBRINI, Chiara]</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Application</td>\n",
       "      <td>WO-2017129642-A1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                               title publication_date  \\\n",
       "0  COMPOSITIONS WITH SPECIFIC OLIGOSACCHARIDES TO...       2017-08-03   \n",
       "1  COMPOSITION FOR USE IN THE PREVENTION AND/OR T...       2017-08-03   \n",
       "\n",
       "  assignee_names  year                                          assignees  \\\n",
       "0    [NESTEC SA]  2017  [{'id': 'grid.419905.0', 'city_name': 'Vevey',...   \n",
       "1    [NESTEC SA]  2017  [{'id': 'grid.419905.0', 'city_name': 'Vevey',...   \n",
       "\n",
       "                          inventor_names  times_cited filing_status  \\\n",
       "0  [BLANCHARD, CARINE, NEMBRINI, Chiara]          0.0   Application   \n",
       "1  [BLANCHARD, CARINE, NEMBRINI, Chiara]          0.0   Application   \n",
       "\n",
       "                 id  granted_year  \n",
       "0  WO-2017129644-A1           NaN  \n",
       "1  WO-2017129642-A1           NaN  "
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Step 1 - same as before - except now we want the query in chunks\n",
    "\n",
    "pubs_chunks = dsl.query_iterative(\"\"\"\n",
    "                  search publications \n",
    "                    where research_orgs.id in [\"grid.1008.9\"]\n",
    "                      and year = 2015\n",
    "                    return publications[id] \n",
    "                \"\"\").chunks(250)\n",
    "\n",
    "# Step 2 - almost the same as before - except now we use a for loop to loop through our results\n",
    "#. We changed 2 things below.  publications was replaced with patents, and refernce_ids was replaced by publication_ids\n",
    "\n",
    "query_results = []\n",
    "\n",
    "for c in pubs_chunks:\n",
    "\n",
    "      mypubslist = json.dumps(list(pd.DataFrame(c).id))\n",
    "\n",
    "      query_results.append(\n",
    "          \n",
    "                  dsl.query_iterative(f\"\"\"\n",
    "                        search patents\n",
    "                            where publication_ids in {mypubslist}\n",
    "                            return patents\n",
    "                        \"\"\").as_dataframe()\n",
    "      )\n",
    "\n",
    "# Step 3 - join our results back together again, and get rid of duplicates\n",
    "\n",
    "cited_patents = pd.concat(query_results).\\\n",
    "   drop_duplicates(subset='id')\n",
    "\n",
    "cited_patents.head(2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {
    "Collapsed": "false",
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 189
    },
    "colab_type": "code",
    "id": "2Heuen-hr2NS",
    "outputId": "7e7e3c81-ec9c-4c8a-be25-e65838704cd5"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sources</th>\n",
       "      <th>field</th>\n",
       "      <th>type</th>\n",
       "      <th>description</th>\n",
       "      <th>is_filter</th>\n",
       "      <th>is_entity</th>\n",
       "      <th>is_facet</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>patents</td>\n",
       "      <td>assignees</td>\n",
       "      <td>organizations</td>\n",
       "      <td>Disambiguated GRID organisations who own or ha...</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>patents</td>\n",
       "      <td>current_assignees</td>\n",
       "      <td>organizations</td>\n",
       "      <td>Disambiguated GRID organisations currenlty own...</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>patents</td>\n",
       "      <td>funders</td>\n",
       "      <td>organizations</td>\n",
       "      <td>GRID organisations funding the patent.</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>patents</td>\n",
       "      <td>original_assignees</td>\n",
       "      <td>organizations</td>\n",
       "      <td>Disambiguated GRID organisations that first ow...</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    sources               field           type  \\\n",
       "6   patents           assignees  organizations   \n",
       "19  patents   current_assignees  organizations   \n",
       "26  patents             funders  organizations   \n",
       "35  patents  original_assignees  organizations   \n",
       "\n",
       "                                          description  is_filter  is_entity  \\\n",
       "6   Disambiguated GRID organisations who own or ha...       True       True   \n",
       "19  Disambiguated GRID organisations currenlty own...       True       True   \n",
       "26             GRID organisations funding the patent.       True       True   \n",
       "35  Disambiguated GRID organisations that first ow...       True       True   \n",
       "\n",
       "    is_facet  \n",
       "6       True  \n",
       "19      True  \n",
       "26      True  \n",
       "35      True  "
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%dsldocs patents\n",
    "dsl_last_results[dsl_last_results['type']=='organizations']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {
    "Collapsed": "false",
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 678
    },
    "colab_type": "code",
    "id": "3N2_bijUWYCx",
    "outputId": "8862cb0b-c833-4a72-8194-d32c93023f4d"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>assignee_grid_id</th>\n",
       "      <th>assignee_name</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <th>0</th>\n",
       "      <td>29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>grid.428999.7</th>\n",
       "      <th>Pasteur Institute</th>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>grid.1058.c</th>\n",
       "      <th>Murdoch Children's Research Institute</th>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>grid.453773.1</th>\n",
       "      <th>Wisconsin Alumni Research Foundation</th>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>grid.419905.0</th>\n",
       "      <th>Nestlé (Switzerland)</th>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>grid.420918.6</th>\n",
       "      <th>Imperial Innovations (United Kingdom)</th>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>grid.1055.1</th>\n",
       "      <th>Peter MacCallum Cancer Centre</th>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>grid.25879.31</th>\n",
       "      <th>University of Pennsylvania</th>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>grid.1042.7</th>\n",
       "      <th>Walter and Eliza Hall Institute of Medical Research</th>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>grid.4444.0</th>\n",
       "      <th>French National Centre for Scientific Research</th>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>grid.452266.1</th>\n",
       "      <th>Campus Science Support Facilities</th>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>grid.1003.2</th>\n",
       "      <th>University of Queensland</th>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>grid.420377.5</th>\n",
       "      <th>NEC (Japan)</th>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>grid.420214.1</th>\n",
       "      <th>Sanofi (Germany)</th>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>grid.419859.8</th>\n",
       "      <th>NEC Corporation of America</th>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>grid.419318.6</th>\n",
       "      <th>Intel (United States)</th>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>grid.417521.4</th>\n",
       "      <th>Institute of Molecular Biotechnology</th>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>grid.29857.31</th>\n",
       "      <th>Pennsylvania State University</th>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>grid.431532.2</th>\n",
       "      <th>Mesoblast (United States)</th>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>grid.7429.8</th>\n",
       "      <th>French Institute of Health and Medical Research</th>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                                     id\n",
       "assignee_grid_id assignee_name                                         \n",
       "0                0                                                   29\n",
       "grid.428999.7    Pasteur Institute                                    5\n",
       "grid.1058.c      Murdoch Children's Research Institute                4\n",
       "grid.453773.1    Wisconsin Alumni Research Foundation                 3\n",
       "grid.419905.0    Nestlé (Switzerland)                                 3\n",
       "grid.420918.6    Imperial Innovations (United Kingdom)                3\n",
       "grid.1055.1      Peter MacCallum Cancer Centre                        3\n",
       "grid.25879.31    University of Pennsylvania                           2\n",
       "grid.1042.7      Walter and Eliza Hall Institute of Medical Rese...   2\n",
       "grid.4444.0      French National Centre for Scientific Research       2\n",
       "grid.452266.1    Campus Science Support Facilities                    2\n",
       "grid.1003.2      University of Queensland                             2\n",
       "grid.420377.5    NEC (Japan)                                          2\n",
       "grid.420214.1    Sanofi (Germany)                                     2\n",
       "grid.419859.8    NEC Corporation of America                           2\n",
       "grid.419318.6    Intel (United States)                                2\n",
       "grid.417521.4    Institute of Molecular Biotechnology                 2\n",
       "grid.29857.31    Pennsylvania State University                        2\n",
       "grid.431532.2    Mesoblast (United States)                            2\n",
       "grid.7429.8      French Institute of Health and Medical Research      2"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import json\n",
    "cited_patents_assignees = cited_patents.explode('assignees')\n",
    "\n",
    "cited_patents_assignees['assignee_grid_id'] = cited_patents_assignees['assignees'].\\\n",
    "    apply(lambda g: g['id'] if type(g) == dict else 0 )\n",
    "\n",
    "cited_patents_assignees['assignee_name'] = cited_patents_assignees['assignees'].\\\n",
    "    apply(lambda g: g['name'] if type(g) == dict else 0 )\n",
    "\n",
    "cited_patents_assignees.\\\n",
    "    groupby(['assignee_grid_id','assignee_name']).\\\n",
    "    agg({'id':'count'}).\\\n",
    "    sort_values(by='id', ascending=False).\\\n",
    "    head(20) "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "Collapsed": "false",
    "colab_type": "text",
    "id": "otHDjE1wNIL3"
   },
   "source": [
    "## 10. Clinical Trials (clinical trials -> publications)\n",
    "\n",
    "\n",
    "Using the same method, we can retrieve all clinical trials citing publications from my institution. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {
    "Collapsed": "false",
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 110
    },
    "colab_type": "code",
    "id": "_Sz3x0ZLlVTm",
    "outputId": "de0ddad0-8a2c-491a-8b32-85782ae7282e"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sources</th>\n",
       "      <th>field</th>\n",
       "      <th>type</th>\n",
       "      <th>description</th>\n",
       "      <th>is_filter</th>\n",
       "      <th>is_entity</th>\n",
       "      <th>is_facet</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>clinical_trials</td>\n",
       "      <td>research_orgs</td>\n",
       "      <td>organizations</td>\n",
       "      <td>GRID organizations involved, e.g. as sponsors ...</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            sources          field           type  \\\n",
       "29  clinical_trials  research_orgs  organizations   \n",
       "\n",
       "                                          description  is_filter  is_entity  \\\n",
       "29  GRID organizations involved, e.g. as sponsors ...       True       True   \n",
       "\n",
       "    is_facet  \n",
       "29      True  "
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%dsldocs clinical_trials\n",
    "dsl_last_results[dsl_last_results['field']=='research_orgs']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {
    "Collapsed": "false",
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 802
    },
    "colab_type": "code",
    "id": "kl4tiX0qiBbO",
    "outputId": "6f7652cb-0f84-48d5-e5da-073545cdf611"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-1000 / 8388 (0.46s)\n",
      "1000-2000 / 8388 (0.48s)\n",
      "2000-3000 / 8388 (0.48s)\n",
      "3000-4000 / 8388 (0.48s)\n",
      "4000-5000 / 8388 (0.47s)\n",
      "5000-6000 / 8388 (0.48s)\n",
      "6000-7000 / 8388 (0.52s)\n",
      "7000-8000 / 8388 (0.50s)\n",
      "8000-8388 / 8388 (0.47s)\n",
      "===\n",
      "Records extracted: 8388\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-12 / 12 (1.20s)\n",
      "===\n",
      "Records extracted: 12\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-18 / 18 (1.36s)\n",
      "===\n",
      "Records extracted: 18\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-25 / 25 (1.40s)\n",
      "===\n",
      "Records extracted: 25\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-9 / 9 (1.13s)\n",
      "===\n",
      "Records extracted: 9\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-8 / 8 (1.06s)\n",
      "===\n",
      "Records extracted: 8\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-15 / 15 (1.11s)\n",
      "===\n",
      "Records extracted: 15\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-5 / 5 (1.71s)\n",
      "===\n",
      "Records extracted: 5\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-8 / 8 (1.01s)\n",
      "===\n",
      "Records extracted: 8\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-13 / 13 (1.17s)\n",
      "===\n",
      "Records extracted: 13\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-12 / 12 (1.06s)\n",
      "===\n",
      "Records extracted: 12\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-14 / 14 (1.02s)\n",
      "===\n",
      "Records extracted: 14\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-15 / 15 (1.08s)\n",
      "===\n",
      "Records extracted: 15\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-6 / 6 (0.96s)\n",
      "===\n",
      "Records extracted: 6\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-6 / 6 (1.00s)\n",
      "===\n",
      "Records extracted: 6\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-16 / 16 (1.33s)\n",
      "===\n",
      "Records extracted: 16\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-12 / 12 (1.13s)\n",
      "===\n",
      "Records extracted: 12\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-10 / 10 (1.23s)\n",
      "===\n",
      "Records extracted: 10\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-13 / 13 (1.10s)\n",
      "===\n",
      "Records extracted: 13\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-2 / 2 (0.84s)\n",
      "===\n",
      "Records extracted: 2\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "===\n",
      "Records extracted: 0\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-3 / 3 (0.90s)\n",
      "===\n",
      "Records extracted: 3\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>phase</th>\n",
       "      <th>investigators</th>\n",
       "      <th>abstract</th>\n",
       "      <th>active_years</th>\n",
       "      <th>FOR</th>\n",
       "      <th>RCDC</th>\n",
       "      <th>researchers</th>\n",
       "      <th>organizations</th>\n",
       "      <th>HRCS_HC</th>\n",
       "      <th>dimensions_url</th>\n",
       "      <th>...</th>\n",
       "      <th>publication_ids</th>\n",
       "      <th>category_for</th>\n",
       "      <th>HRCS_RAC</th>\n",
       "      <th>funder_groups</th>\n",
       "      <th>category_hrcs_rac</th>\n",
       "      <th>mesh_terms</th>\n",
       "      <th>associated_grant_ids</th>\n",
       "      <th>category_icrp_ct</th>\n",
       "      <th>category_icrp_cso</th>\n",
       "      <th>acronym</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>N/A</td>\n",
       "      <td>[[Beverley-Ann Biggs, Prof, Contact person for...</td>\n",
       "      <td>In this study, we will compare the effects of ...</td>\n",
       "      <td>[2010]</td>\n",
       "      <td>[{'id': '3177', 'name': '1117 Public Health an...</td>\n",
       "      <td>[{'id': '388', 'name': 'Nutrition'}, {'id': '4...</td>\n",
       "      <td>[{'id': 'ur.015271425054.80', 'first_name': 'B...</td>\n",
       "      <td>[{'id': 'grid.431143.0', 'name': 'National Hea...</td>\n",
       "      <td>[{'id': '908', 'name': 'Reproductive Health an...</td>\n",
       "      <td>https://app.dimensions.ai/details/clinical_tri...</td>\n",
       "      <td>...</td>\n",
       "      <td>[pub.1029788523, pub.1032854231, pub.100861447...</td>\n",
       "      <td>[{'id': '3177', 'name': '1117 Public Health an...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Phase 1/2</td>\n",
       "      <td>[[Steven Deeks, MD, Principal Investigator, Un...</td>\n",
       "      <td>The purpose of this study is to determine the ...</td>\n",
       "      <td>[2013, 2014]</td>\n",
       "      <td>[{'id': '3114', 'name': '1108 Medical Microbio...</td>\n",
       "      <td>[{'id': '533', 'name': 'Infectious Diseases'},...</td>\n",
       "      <td>[{'id': 'ur.012534455317.24', 'first_name': 'S...</td>\n",
       "      <td>[{'id': 'grid.266102.1', 'name': 'University o...</td>\n",
       "      <td>[{'id': '898', 'name': 'Infection'}]</td>\n",
       "      <td>https://app.dimensions.ai/details/clinical_tri...</td>\n",
       "      <td>...</td>\n",
       "      <td>[pub.1032634520]</td>\n",
       "      <td>[{'id': '3114', 'name': '1108 Medical Microbio...</td>\n",
       "      <td>[{'id': '10601', 'name': '6.1 Pharmaceuticals'...</td>\n",
       "      <td>[{'id': '5', 'name': 'NIH'}, {'id': '25', 'nam...</td>\n",
       "      <td>[{'id': '10500', 'name': '5 Development of Tre...</td>\n",
       "      <td>[Acquired Immunodeficiency Syndrome, HIV Infec...</td>\n",
       "      <td>[grant.2420809]</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2 rows × 40 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       phase                                      investigators  \\\n",
       "0        N/A  [[Beverley-Ann Biggs, Prof, Contact person for...   \n",
       "1  Phase 1/2  [[Steven Deeks, MD, Principal Investigator, Un...   \n",
       "\n",
       "                                            abstract  active_years  \\\n",
       "0  In this study, we will compare the effects of ...        [2010]   \n",
       "1  The purpose of this study is to determine the ...  [2013, 2014]   \n",
       "\n",
       "                                                 FOR  \\\n",
       "0  [{'id': '3177', 'name': '1117 Public Health an...   \n",
       "1  [{'id': '3114', 'name': '1108 Medical Microbio...   \n",
       "\n",
       "                                                RCDC  \\\n",
       "0  [{'id': '388', 'name': 'Nutrition'}, {'id': '4...   \n",
       "1  [{'id': '533', 'name': 'Infectious Diseases'},...   \n",
       "\n",
       "                                         researchers  \\\n",
       "0  [{'id': 'ur.015271425054.80', 'first_name': 'B...   \n",
       "1  [{'id': 'ur.012534455317.24', 'first_name': 'S...   \n",
       "\n",
       "                                       organizations  \\\n",
       "0  [{'id': 'grid.431143.0', 'name': 'National Hea...   \n",
       "1  [{'id': 'grid.266102.1', 'name': 'University o...   \n",
       "\n",
       "                                             HRCS_HC  \\\n",
       "0  [{'id': '908', 'name': 'Reproductive Health an...   \n",
       "1               [{'id': '898', 'name': 'Infection'}]   \n",
       "\n",
       "                                      dimensions_url  ...  \\\n",
       "0  https://app.dimensions.ai/details/clinical_tri...  ...   \n",
       "1  https://app.dimensions.ai/details/clinical_tri...  ...   \n",
       "\n",
       "                                     publication_ids  \\\n",
       "0  [pub.1029788523, pub.1032854231, pub.100861447...   \n",
       "1                                   [pub.1032634520]   \n",
       "\n",
       "                                        category_for  \\\n",
       "0  [{'id': '3177', 'name': '1117 Public Health an...   \n",
       "1  [{'id': '3114', 'name': '1108 Medical Microbio...   \n",
       "\n",
       "                                            HRCS_RAC  \\\n",
       "0                                                NaN   \n",
       "1  [{'id': '10601', 'name': '6.1 Pharmaceuticals'...   \n",
       "\n",
       "                                       funder_groups  \\\n",
       "0                                                NaN   \n",
       "1  [{'id': '5', 'name': 'NIH'}, {'id': '25', 'nam...   \n",
       "\n",
       "                                   category_hrcs_rac  \\\n",
       "0                                                NaN   \n",
       "1  [{'id': '10500', 'name': '5 Development of Tre...   \n",
       "\n",
       "                                          mesh_terms associated_grant_ids  \\\n",
       "0                                                NaN                  NaN   \n",
       "1  [Acquired Immunodeficiency Syndrome, HIV Infec...      [grant.2420809]   \n",
       "\n",
       "  category_icrp_ct category_icrp_cso acronym  \n",
       "0              NaN               NaN     NaN  \n",
       "1              NaN               NaN     NaN  \n",
       "\n",
       "[2 rows x 40 columns]"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Step 1 - same as before - except now we want the query in chunks\n",
    "\n",
    "clinical_trials_chunks = dsl.query_iterative(\"\"\"\n",
    "                  search publications \n",
    "                    where research_orgs.id in [\"grid.1008.9\"]\n",
    "                      and year = 2015\n",
    "                    return publications[id] \n",
    "                \"\"\").chunks(400)\n",
    "\n",
    "# Step 2 - almost the same as before - except now we use a for loop to loop through our results\n",
    "#. We changed 2 things below.  publications was replaced with clinical_trials, and reference_ids was replaced by publication_ids\n",
    "\n",
    "query_results = []\n",
    "\n",
    "for c in clinical_trials_chunks:\n",
    "\n",
    "      mypubslist = json.dumps(list(pd.DataFrame(c).id))\n",
    "\n",
    "      query_results.append(\n",
    "          \n",
    "                  dsl.query_iterative(f\"\"\"\n",
    "                        search clinical_trials\n",
    "                            where publication_ids in {mypubslist}\n",
    "                            return clinical_trials[all]\n",
    "                        \"\"\").as_dataframe()\n",
    "      )\n",
    "\n",
    "# Step 3 - join our results back together again, and get rid of duplicates\n",
    "\n",
    "cited_clinical_trials = pd.concat(query_results).\\\n",
    "   drop_duplicates(subset='id')\n",
    "\n",
    "cited_clinical_trials.head(2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {
    "Collapsed": "false",
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 131
    },
    "colab_type": "code",
    "id": "DfbW2-9KsWJz",
    "outputId": "a608eb02-0db9-45c3-a675-3f8c6c7301db"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sources</th>\n",
       "      <th>field</th>\n",
       "      <th>type</th>\n",
       "      <th>description</th>\n",
       "      <th>is_filter</th>\n",
       "      <th>is_entity</th>\n",
       "      <th>is_facet</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>clinical_trials</td>\n",
       "      <td>funders</td>\n",
       "      <td>organizations</td>\n",
       "      <td>GRID funding organisations that are involved w...</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>clinical_trials</td>\n",
       "      <td>research_orgs</td>\n",
       "      <td>organizations</td>\n",
       "      <td>GRID organizations involved, e.g. as sponsors ...</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            sources          field           type  \\\n",
       "18  clinical_trials        funders  organizations   \n",
       "29  clinical_trials  research_orgs  organizations   \n",
       "\n",
       "                                          description  is_filter  is_entity  \\\n",
       "18  GRID funding organisations that are involved w...       True       True   \n",
       "29  GRID organizations involved, e.g. as sponsors ...       True       True   \n",
       "\n",
       "    is_facet  \n",
       "18      True  \n",
       "29      True  "
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%dsldocs clinical_trials\n",
    "dsl_last_results[dsl_last_results['type']=='organizations']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {
    "Collapsed": "false",
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 678
    },
    "colab_type": "code",
    "id": "-VjZVpdwkHFv",
    "outputId": "01d9c2c5-95b1-4076-f0de-27cb283cc993"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>research_orgs_grid_id</th>\n",
       "      <th>research_orgs_name</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>grid.431143.0</th>\n",
       "      <th>National Health and Medical Research Council</th>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>grid.1008.9</th>\n",
       "      <th>University of Melbourne</th>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>grid.416153.4</th>\n",
       "      <th>Royal Melbourne Hospital</th>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>grid.21107.35</th>\n",
       "      <th>Johns Hopkins University</th>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <th>0</th>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>grid.266102.1</th>\n",
       "      <th>University of California, San Francisco</th>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>grid.1058.c</th>\n",
       "      <th>Murdoch Children's Research Institute</th>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>grid.1055.1</th>\n",
       "      <th>Peter MacCallum Cancer Centre</th>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>grid.1002.3</th>\n",
       "      <th>Monash University</th>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>grid.413249.9</th>\n",
       "      <th>Royal Prince Alfred Hospital</th>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>grid.84393.35</th>\n",
       "      <th>Hospital Universitari i Politècnic La Fe</th>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>grid.416259.d</th>\n",
       "      <th>Royal Women's Hospital</th>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>grid.419681.3</th>\n",
       "      <th>National Institute of Allergy and Infectious Diseases</th>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>grid.416100.2</th>\n",
       "      <th>Royal Brisbane and Women's Hospital</th>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>grid.277151.7</th>\n",
       "      <th>Centre Hospitalier Universitaire de Nantes</th>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>grid.1003.2</th>\n",
       "      <th>University of Queensland</th>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>grid.1623.6</th>\n",
       "      <th>The Alfred Hospital</th>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>grid.5650.6</th>\n",
       "      <th>Academic Medical Center</th>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>grid.411109.c</th>\n",
       "      <th>Virgen del Rocío University Hospital</th>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>grid.412687.e</th>\n",
       "      <th>Ottawa Hospital</th>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                                          id\n",
       "research_orgs_grid_id research_orgs_name                                    \n",
       "grid.431143.0         National Health and Medical Research Council        11\n",
       "grid.1008.9           University of Melbourne                             11\n",
       "grid.416153.4         Royal Melbourne Hospital                             6\n",
       "grid.21107.35         Johns Hopkins University                             6\n",
       "0                     0                                                    5\n",
       "grid.266102.1         University of California, San Francisco              5\n",
       "grid.1058.c           Murdoch Children's Research Institute                5\n",
       "grid.1055.1           Peter MacCallum Cancer Centre                        5\n",
       "grid.1002.3           Monash University                                    5\n",
       "grid.413249.9         Royal Prince Alfred Hospital                         4\n",
       "grid.84393.35         Hospital Universitari i Politècnic La Fe             4\n",
       "grid.416259.d         Royal Women's Hospital                               4\n",
       "grid.419681.3         National Institute of Allergy and Infectious Di...   4\n",
       "grid.416100.2         Royal Brisbane and Women's Hospital                  4\n",
       "grid.277151.7         Centre Hospitalier Universitaire de Nantes           4\n",
       "grid.1003.2           University of Queensland                             4\n",
       "grid.1623.6           The Alfred Hospital                                  4\n",
       "grid.5650.6           Academic Medical Center                              4\n",
       "grid.411109.c         Virgen del Rocío University Hospital                 4\n",
       "grid.412687.e         Ottawa Hospital                                      3"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cited_clinical_trials_orgs = cited_clinical_trials.explode('research_orgs')\n",
    "\n",
    "cited_clinical_trials_orgs['research_orgs_grid_id'] = cited_clinical_trials_orgs['research_orgs'].\\\n",
    "    apply(lambda g: g['id'] if type(g) == dict else 0 )\n",
    "\n",
    "cited_clinical_trials_orgs['research_orgs_name'] = cited_clinical_trials_orgs['research_orgs'].\\\n",
    "    apply(lambda g: g['name'] if type(g) == dict else 0 )\n",
    "\n",
    "cited_clinical_trials_orgs.\\\n",
    "    groupby(['research_orgs_grid_id','research_orgs_name']).\\\n",
    "    agg({'id':'count'}).\\\n",
    "    sort_values(by='id', ascending=False).\\\n",
    "    head(20) "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "Collapsed": "false",
    "colab_type": "text",
    "id": "PMZslxcEM87t"
   },
   "source": [
    "## 11. Grants (publications -> grants)\n",
    "\n",
    "Using the same method, we can retrieve all grants funding publications from my institution. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {
    "Collapsed": "false",
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 164
    },
    "colab_type": "code",
    "id": "KDC8FG-5qd1o",
    "outputId": "0fb3ab37-b0cc-444f-ddb3-f263e9e7b890"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sources</th>\n",
       "      <th>field</th>\n",
       "      <th>type</th>\n",
       "      <th>description</th>\n",
       "      <th>is_filter</th>\n",
       "      <th>is_entity</th>\n",
       "      <th>is_facet</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <td>publications</td>\n",
       "      <td>reference_ids</td>\n",
       "      <td>string</td>\n",
       "      <td>Dimensions publication ID for publications in ...</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>51</th>\n",
       "      <td>publications</td>\n",
       "      <td>supporting_grant_ids</td>\n",
       "      <td>string</td>\n",
       "      <td>Grants supporting a publication, returned as a...</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         sources                 field    type  \\\n",
       "39  publications         reference_ids  string   \n",
       "51  publications  supporting_grant_ids  string   \n",
       "\n",
       "                                          description  is_filter  is_entity  \\\n",
       "39  Dimensions publication ID for publications in ...       True      False   \n",
       "51  Grants supporting a publication, returned as a...       True      False   \n",
       "\n",
       "    is_facet  \n",
       "39     False  \n",
       "51     False  "
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%dsldocs publications\n",
    "dsl_last_results[dsl_last_results['field'].str.contains('ids')]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {
    "Collapsed": "false",
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 771
    },
    "colab_type": "code",
    "id": "TfaCXX7ewjBz",
    "outputId": "631bedee-3680-42a7-cc98-cd4da8230613"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-1000 / 10740 (2.57s)\n",
      "1000-2000 / 10740 (1.55s)\n",
      "2000-3000 / 10740 (1.03s)\n",
      "3000-4000 / 10740 (0.97s)\n",
      "4000-5000 / 10740 (1.16s)\n",
      "5000-6000 / 10740 (2.27s)\n",
      "6000-7000 / 10740 (0.96s)\n",
      "7000-8000 / 10740 (0.97s)\n",
      "8000-9000 / 10740 (0.96s)\n",
      "9000-10000 / 10740 (1.00s)\n",
      "10000-10740 / 10740 (0.95s)\n",
      "===\n",
      "Records extracted: 10740\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-250 / 250 (2.85s)\n",
      "===\n",
      "Records extracted: 250\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-249 / 249 (2.21s)\n",
      "===\n",
      "Records extracted: 249\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-250 / 250 (2.34s)\n",
      "===\n",
      "Records extracted: 250\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-249 / 249 (2.33s)\n",
      "===\n",
      "Records extracted: 249\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-250 / 250 (3.55s)\n",
      "===\n",
      "Records extracted: 250\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-249 / 249 (5.50s)\n",
      "===\n",
      "Records extracted: 249\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-248 / 248 (3.39s)\n",
      "===\n",
      "Records extracted: 248\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-250 / 250 (3.06s)\n",
      "===\n",
      "Records extracted: 250\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-250 / 250 (2.95s)\n",
      "===\n",
      "Records extracted: 250\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-249 / 249 (3.08s)\n",
      "===\n",
      "Records extracted: 249\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-249 / 249 (3.34s)\n",
      "===\n",
      "Records extracted: 249\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-250 / 250 (2.94s)\n",
      "===\n",
      "Records extracted: 250\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-249 / 249 (2.87s)\n",
      "===\n",
      "Records extracted: 249\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-250 / 250 (2.85s)\n",
      "===\n",
      "Records extracted: 250\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-249 / 249 (2.86s)\n",
      "===\n",
      "Records extracted: 249\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-250 / 250 (3.12s)\n",
      "===\n",
      "Records extracted: 250\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-250 / 250 (3.11s)\n",
      "===\n",
      "Records extracted: 250\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-250 / 250 (2.95s)\n",
      "===\n",
      "Records extracted: 250\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-249 / 249 (2.99s)\n",
      "===\n",
      "Records extracted: 249\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-249 / 249 (2.90s)\n",
      "===\n",
      "Records extracted: 249\n",
      "Starting iteration with limit=1000 skip=0 ...\n",
      "0-29 / 29 (0.77s)\n",
      "===\n",
      "Records extracted: 29\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>project_num</th>\n",
       "      <th>funding_org_name</th>\n",
       "      <th>abstract</th>\n",
       "      <th>HRCS_RAC</th>\n",
       "      <th>FOR</th>\n",
       "      <th>funding_jpy</th>\n",
       "      <th>researchers</th>\n",
       "      <th>funding_nzd</th>\n",
       "      <th>original_title</th>\n",
       "      <th>funding_cad</th>\n",
       "      <th>...</th>\n",
       "      <th>terms</th>\n",
       "      <th>foa_number</th>\n",
       "      <th>category_for</th>\n",
       "      <th>category_bra</th>\n",
       "      <th>category_hra</th>\n",
       "      <th>category_icrp_ct</th>\n",
       "      <th>category_icrp_cso</th>\n",
       "      <th>funding_org_acronym</th>\n",
       "      <th>funding_org_city</th>\n",
       "      <th>category_sdg</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>R01HG010480</td>\n",
       "      <td>National Human Genome Research Institute</td>\n",
       "      <td>Abstract Modern genome-wide association studie...</td>\n",
       "      <td>[{'id': '10201', 'name': '2.1 Biological and e...</td>\n",
       "      <td>[{'id': '2358', 'name': '0104 Statistics'}, {'...</td>\n",
       "      <td>120732088.0</td>\n",
       "      <td>[{'id': 'ur.013651144457.90', 'first_name': 'N...</td>\n",
       "      <td>1675920.0</td>\n",
       "      <td>Robust Methods for Polygenic Analysis to Infor...</td>\n",
       "      <td>1459322.0</td>\n",
       "      <td>...</td>\n",
       "      <td>[robust method, polygenic analysis, analysis, ...</td>\n",
       "      <td>PA-18-484</td>\n",
       "      <td>[{'id': '2201', 'name': '01 Mathematical Scien...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>R21NS107739</td>\n",
       "      <td>National Institute of Neurological Disorders a...</td>\n",
       "      <td>ABSTRACT Epilepsy is a devastating neurologica...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>[{'id': '3120', 'name': '1109 Neurosciences'}]</td>\n",
       "      <td>48433820.0</td>\n",
       "      <td>[{'id': 'ur.01011324163.07', 'first_name': 'Ca...</td>\n",
       "      <td>674575.0</td>\n",
       "      <td>Prediction of seizure lateralization and posto...</td>\n",
       "      <td>589505.0</td>\n",
       "      <td>...</td>\n",
       "      <td>[seizure lateralization, lateralization, posto...</td>\n",
       "      <td>PA-18-358</td>\n",
       "      <td>[{'id': '2211', 'name': '11 Medical and Health...</td>\n",
       "      <td>[{'id': '4001', 'name': 'Clinical Medicine and...</td>\n",
       "      <td>[{'id': '3901', 'name': 'Clinical'}]</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1158127</td>\n",
       "      <td>National Health and Medical Research Council</td>\n",
       "      <td>Genome-wide association studies for psychiatri...</td>\n",
       "      <td>[{'id': '10201', 'name': '2.1 Biological and e...</td>\n",
       "      <td>[{'id': '2620', 'name': '0604 Genetics'}, {'id...</td>\n",
       "      <td>72444320.0</td>\n",
       "      <td>[{'id': 'ur.01074226355.01', 'first_name': 'Sa...</td>\n",
       "      <td>1008990.0</td>\n",
       "      <td>Using Statistical Genetics to Elucidate the Ef...</td>\n",
       "      <td>881753.0</td>\n",
       "      <td>...</td>\n",
       "      <td>[statistical genetics, genetics, effect, assoc...</td>\n",
       "      <td>Not available</td>\n",
       "      <td>[{'id': '2620', 'name': '0604 Genetics'}, {'id...</td>\n",
       "      <td>[{'id': '4000', 'name': 'Basic Science'}]</td>\n",
       "      <td>[{'id': '3900', 'name': 'Biomedical'}]</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1154217</td>\n",
       "      <td>National Health and Medical Research Council</td>\n",
       "      <td>Arthritis and musculoskeletal conditions are a...</td>\n",
       "      <td>[{'id': '10201', 'name': '2.1 Biological and e...</td>\n",
       "      <td>[{'id': '3053', 'name': '1103 Clinical Science...</td>\n",
       "      <td>54872472.0</td>\n",
       "      <td>[{'id': 'ur.016155464604.94', 'first_name': 'R...</td>\n",
       "      <td>764253.0</td>\n",
       "      <td>Lifestyle management of knee osteoarthritis: c...</td>\n",
       "      <td>667878.0</td>\n",
       "      <td>...</td>\n",
       "      <td>[lifestyle management, management, knee osteoa...</td>\n",
       "      <td>Not available</td>\n",
       "      <td>[{'id': '3053', 'name': '1103 Clinical Science...</td>\n",
       "      <td>[{'id': '4001', 'name': 'Clinical Medicine and...</td>\n",
       "      <td>[{'id': '3901', 'name': 'Clinical'}]</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1159261</td>\n",
       "      <td>National Health and Medical Research Council</td>\n",
       "      <td>Preeclampsia and fetal growth restriction are ...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>[{'id': '3158', 'name': '1114 Paediatrics and ...</td>\n",
       "      <td>36628680.0</td>\n",
       "      <td>[{'id': 'ur.010007620107.38', 'first_name': 'T...</td>\n",
       "      <td>510157.0</td>\n",
       "      <td>New diagnostics to predict preelampsia and fet...</td>\n",
       "      <td>445824.0</td>\n",
       "      <td>...</td>\n",
       "      <td>[new diagnostics, diagnostics, fetal growth re...</td>\n",
       "      <td>Not available</td>\n",
       "      <td>[{'id': '3158', 'name': '1114 Paediatrics and ...</td>\n",
       "      <td>[{'id': '4000', 'name': 'Basic Science'}]</td>\n",
       "      <td>[{'id': '3900', 'name': 'Biomedical'}]</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 58 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   project_num                                   funding_org_name  \\\n",
       "0  R01HG010480           National Human Genome Research Institute   \n",
       "1  R21NS107739  National Institute of Neurological Disorders a...   \n",
       "2      1158127       National Health and Medical Research Council   \n",
       "3      1154217       National Health and Medical Research Council   \n",
       "4      1159261       National Health and Medical Research Council   \n",
       "\n",
       "                                            abstract  \\\n",
       "0  Abstract Modern genome-wide association studie...   \n",
       "1  ABSTRACT Epilepsy is a devastating neurologica...   \n",
       "2  Genome-wide association studies for psychiatri...   \n",
       "3  Arthritis and musculoskeletal conditions are a...   \n",
       "4  Preeclampsia and fetal growth restriction are ...   \n",
       "\n",
       "                                            HRCS_RAC  \\\n",
       "0  [{'id': '10201', 'name': '2.1 Biological and e...   \n",
       "1                                                NaN   \n",
       "2  [{'id': '10201', 'name': '2.1 Biological and e...   \n",
       "3  [{'id': '10201', 'name': '2.1 Biological and e...   \n",
       "4                                                NaN   \n",
       "\n",
       "                                                 FOR  funding_jpy  \\\n",
       "0  [{'id': '2358', 'name': '0104 Statistics'}, {'...  120732088.0   \n",
       "1     [{'id': '3120', 'name': '1109 Neurosciences'}]   48433820.0   \n",
       "2  [{'id': '2620', 'name': '0604 Genetics'}, {'id...   72444320.0   \n",
       "3  [{'id': '3053', 'name': '1103 Clinical Science...   54872472.0   \n",
       "4  [{'id': '3158', 'name': '1114 Paediatrics and ...   36628680.0   \n",
       "\n",
       "                                         researchers  funding_nzd  \\\n",
       "0  [{'id': 'ur.013651144457.90', 'first_name': 'N...    1675920.0   \n",
       "1  [{'id': 'ur.01011324163.07', 'first_name': 'Ca...     674575.0   \n",
       "2  [{'id': 'ur.01074226355.01', 'first_name': 'Sa...    1008990.0   \n",
       "3  [{'id': 'ur.016155464604.94', 'first_name': 'R...     764253.0   \n",
       "4  [{'id': 'ur.010007620107.38', 'first_name': 'T...     510157.0   \n",
       "\n",
       "                                      original_title  funding_cad  ...  \\\n",
       "0  Robust Methods for Polygenic Analysis to Infor...    1459322.0  ...   \n",
       "1  Prediction of seizure lateralization and posto...     589505.0  ...   \n",
       "2  Using Statistical Genetics to Elucidate the Ef...     881753.0  ...   \n",
       "3  Lifestyle management of knee osteoarthritis: c...     667878.0  ...   \n",
       "4  New diagnostics to predict preelampsia and fet...     445824.0  ...   \n",
       "\n",
       "                                               terms     foa_number  \\\n",
       "0  [robust method, polygenic analysis, analysis, ...      PA-18-484   \n",
       "1  [seizure lateralization, lateralization, posto...      PA-18-358   \n",
       "2  [statistical genetics, genetics, effect, assoc...  Not available   \n",
       "3  [lifestyle management, management, knee osteoa...  Not available   \n",
       "4  [new diagnostics, diagnostics, fetal growth re...  Not available   \n",
       "\n",
       "                                        category_for  \\\n",
       "0  [{'id': '2201', 'name': '01 Mathematical Scien...   \n",
       "1  [{'id': '2211', 'name': '11 Medical and Health...   \n",
       "2  [{'id': '2620', 'name': '0604 Genetics'}, {'id...   \n",
       "3  [{'id': '3053', 'name': '1103 Clinical Science...   \n",
       "4  [{'id': '3158', 'name': '1114 Paediatrics and ...   \n",
       "\n",
       "                                        category_bra  \\\n",
       "0                                                NaN   \n",
       "1  [{'id': '4001', 'name': 'Clinical Medicine and...   \n",
       "2          [{'id': '4000', 'name': 'Basic Science'}]   \n",
       "3  [{'id': '4001', 'name': 'Clinical Medicine and...   \n",
       "4          [{'id': '4000', 'name': 'Basic Science'}]   \n",
       "\n",
       "                             category_hra category_icrp_ct category_icrp_cso  \\\n",
       "0                                     NaN              NaN               NaN   \n",
       "1    [{'id': '3901', 'name': 'Clinical'}]              NaN               NaN   \n",
       "2  [{'id': '3900', 'name': 'Biomedical'}]              NaN               NaN   \n",
       "3    [{'id': '3901', 'name': 'Clinical'}]              NaN               NaN   \n",
       "4  [{'id': '3900', 'name': 'Biomedical'}]              NaN               NaN   \n",
       "\n",
       "  funding_org_acronym funding_org_city category_sdg  \n",
       "0                 NaN              NaN          NaN  \n",
       "1                 NaN              NaN          NaN  \n",
       "2                 NaN              NaN          NaN  \n",
       "3                 NaN              NaN          NaN  \n",
       "4                 NaN              NaN          NaN  \n",
       "\n",
       "[5 rows x 58 columns]"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Step 1 - same as before - except now we want the query in chunks\n",
    "\n",
    "publications = dsl.query_iterative(\"\"\"\n",
    "                  search publications \n",
    "                    where research_orgs.id in [\"grid.1008.9\"]\n",
    "                      and year = 2020\n",
    "                    return publications[id+supporting_grant_ids] \n",
    "                \"\"\").as_dataframe()\n",
    "\n",
    "# Step 2 - we can get the grants IDs directly from publications this time. \n",
    "# So as a second step, we want to pull grants metadata using these identifiers. \n",
    "\n",
    "pubs_grants = publications.explode('supporting_grant_ids')\n",
    "\n",
    "grants_from_pubs = pd.DataFrame(pubs_grants.supporting_grant_ids.unique()).\\\n",
    "                   dropna().\\\n",
    "                   rename(columns={0:'id'})\n",
    "\n",
    "query_results = []\n",
    "\n",
    "for g, gnts in grants_from_pubs.groupby(np.arange(len(grants_from_pubs)) // 250):\n",
    "          # This does *almost* the same thing as the chunks command used above\n",
    "\n",
    "      myglist = json.dumps(list(gnts.id))\n",
    "\n",
    "      query_results.append(\n",
    "          \n",
    "                  dsl.query_iterative(f\"\"\"\n",
    "                        search grants\n",
    "                            where id in {myglist}\n",
    "                          return grants[all]\n",
    "                        \"\"\").as_dataframe()\n",
    "      )\n",
    "\n",
    "# Step 3 - join our results back together again, and get rid of duplicates\n",
    "\n",
    "grant_details = pd.concat(query_results).\\\n",
    "   drop_duplicates(subset='id')\n",
    "\n",
    "grant_details.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {
    "Collapsed": "false",
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 621
    },
    "colab_type": "code",
    "id": "raAEqmNx2XRg",
    "outputId": "0fb4c7ee-3748-42cf-b040-fe259fe7a876"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>pubs</th>\n",
       "      <th>original_title</th>\n",
       "      <th>funding_usd</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2213</th>\n",
       "      <td>grant.6711717</td>\n",
       "      <td>35</td>\n",
       "      <td>ARC Centre of Excellence in Exciton Science</td>\n",
       "      <td>22669994.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1210</th>\n",
       "      <td>grant.3931418</td>\n",
       "      <td>31</td>\n",
       "      <td>ARC Centre of Excellence in Convergent Bio-Nan...</td>\n",
       "      <td>19674412.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3478</th>\n",
       "      <td>grant.7874297</td>\n",
       "      <td>23</td>\n",
       "      <td>Advancing Nanomedicine through Particle Techno...</td>\n",
       "      <td>617151.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1146</th>\n",
       "      <td>grant.3860228</td>\n",
       "      <td>22</td>\n",
       "      <td>ENIGMA Center for Worldwide Medicine, Imaging ...</td>\n",
       "      <td>10065774.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4159</th>\n",
       "      <td>grant.7878111</td>\n",
       "      <td>22</td>\n",
       "      <td>Novel therapies, risk pathways and prevention ...</td>\n",
       "      <td>643236.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1953</th>\n",
       "      <td>grant.5498709</td>\n",
       "      <td>1</td>\n",
       "      <td>Non-Invasive Imaging of Glymphatic Clearance: ...</td>\n",
       "      <td>411126.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1954</th>\n",
       "      <td>grant.5498721</td>\n",
       "      <td>1</td>\n",
       "      <td>Mitochondrial ubiquitin dynamics and apoptotic...</td>\n",
       "      <td>754966.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1955</th>\n",
       "      <td>grant.5499803</td>\n",
       "      <td>1</td>\n",
       "      <td>EMPOWER: Early Signs Monitoring to Prevent Rel...</td>\n",
       "      <td>1105477.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1956</th>\n",
       "      <td>grant.5503573</td>\n",
       "      <td>1</td>\n",
       "      <td>Molecular Regulation of AEP during Ageing</td>\n",
       "      <td>3307629.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5017</th>\n",
       "      <td>grant.8681118</td>\n",
       "      <td>1</td>\n",
       "      <td>Development of molecular markers for applicati...</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5018 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                 id  pubs                                     original_title  \\\n",
       "2213  grant.6711717    35        ARC Centre of Excellence in Exciton Science   \n",
       "1210  grant.3931418    31  ARC Centre of Excellence in Convergent Bio-Nan...   \n",
       "3478  grant.7874297    23  Advancing Nanomedicine through Particle Techno...   \n",
       "1146  grant.3860228    22  ENIGMA Center for Worldwide Medicine, Imaging ...   \n",
       "4159  grant.7878111    22  Novel therapies, risk pathways and prevention ...   \n",
       "...             ...   ...                                                ...   \n",
       "1953  grant.5498709     1  Non-Invasive Imaging of Glymphatic Clearance: ...   \n",
       "1954  grant.5498721     1  Mitochondrial ubiquitin dynamics and apoptotic...   \n",
       "1955  grant.5499803     1  EMPOWER: Early Signs Monitoring to Prevent Rel...   \n",
       "1956  grant.5503573     1          Molecular Regulation of AEP during Ageing   \n",
       "5017  grant.8681118     1  Development of molecular markers for applicati...   \n",
       "\n",
       "      funding_usd  \n",
       "2213   22669994.0  \n",
       "1210   19674412.0  \n",
       "3478     617151.0  \n",
       "1146   10065774.0  \n",
       "4159     643236.0  \n",
       "...           ...  \n",
       "1953     411126.0  \n",
       "1954     754966.0  \n",
       "1955    1105477.0  \n",
       "1956    3307629.0  \n",
       "5017          NaN  \n",
       "\n",
       "[5018 rows x 4 columns]"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pubs_grants.groupby('supporting_grant_ids').\\\n",
    "    agg({'id':'count'}).\\\n",
    "    reset_index().\\\n",
    "    rename(columns={'id':'pubs','supporting_grant_ids':'id'}).\\\n",
    "    merge(grant_details[['id','original_title','funding_usd']],\n",
    "          on='id').\\\n",
    "    sort_values(by='pubs', ascending=False)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "Collapsed": "false",
    "colab_type": "text",
    "id": "DCftPwfc1Y3j"
   },
   "source": [
    "### Why didn't I use resulting_publication_ids ?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {
    "Collapsed": "false",
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 678
    },
    "colab_type": "code",
    "id": "t1sUsKIbziZD",
    "outputId": "1bc6a6c6-4d8e-411f-cd47-632f95b290e7"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Returned Grants: 3 (total = 3)\n",
      "\u001b[2mTime: 0.46s\u001b[0m\n",
      "WARNINGS [1]\n",
      "Field 'resulting_publication_ids' is deprecated. Please refer to https://docs.dimensions.ai/dsl/releasenotes.html for more details\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>start_date</th>\n",
       "      <th>language</th>\n",
       "      <th>id</th>\n",
       "      <th>original_title</th>\n",
       "      <th>title_language</th>\n",
       "      <th>title</th>\n",
       "      <th>active_year</th>\n",
       "      <th>start_year</th>\n",
       "      <th>funding_org_name</th>\n",
       "      <th>end_date</th>\n",
       "      <th>project_num</th>\n",
       "      <th>funders</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2018-12-15</td>\n",
       "      <td>en</td>\n",
       "      <td>grant.4320525</td>\n",
       "      <td>Nanoscale X-Ray Imaging and Dynamics of Electr...</td>\n",
       "      <td>en</td>\n",
       "      <td>Nanoscale X-Ray Imaging and Dynamics of Electr...</td>\n",
       "      <td>[2018, 2019, 2020, 2021]</td>\n",
       "      <td>2018</td>\n",
       "      <td>Office of Basic Energy Sciences</td>\n",
       "      <td>2021-12-14</td>\n",
       "      <td>DE-SC0001805</td>\n",
       "      <td>[{'id': 'grid.452988.a', 'types': ['Government...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2014-08-15</td>\n",
       "      <td>en</td>\n",
       "      <td>grant.3660654</td>\n",
       "      <td>Strain-induced modification of nanoscale mater...</td>\n",
       "      <td>en</td>\n",
       "      <td>Strain-induced modification of nanoscale mater...</td>\n",
       "      <td>[2014, 2015, 2016, 2017, 2018]</td>\n",
       "      <td>2014</td>\n",
       "      <td>Directorate for Mathematical &amp; Physical Sciences</td>\n",
       "      <td>2018-07-31</td>\n",
       "      <td>1411335</td>\n",
       "      <td>[{'id': 'grid.457875.c', 'types': ['Government...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2009-08-15</td>\n",
       "      <td>en</td>\n",
       "      <td>grant.3100327</td>\n",
       "      <td>Magnetic Transition Metal Nanowires</td>\n",
       "      <td>en</td>\n",
       "      <td>Magnetic Transition Metal Nanowires</td>\n",
       "      <td>[2009, 2010, 2011, 2012, 2013]</td>\n",
       "      <td>2009</td>\n",
       "      <td>Directorate for Mathematical &amp; Physical Sciences</td>\n",
       "      <td>2013-09-30</td>\n",
       "      <td>0906957</td>\n",
       "      <td>[{'id': 'grid.457875.c', 'types': ['Government...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   start_date language             id  \\\n",
       "0  2018-12-15       en  grant.4320525   \n",
       "1  2014-08-15       en  grant.3660654   \n",
       "2  2009-08-15       en  grant.3100327   \n",
       "\n",
       "                                      original_title title_language  \\\n",
       "0  Nanoscale X-Ray Imaging and Dynamics of Electr...             en   \n",
       "1  Strain-induced modification of nanoscale mater...             en   \n",
       "2                Magnetic Transition Metal Nanowires             en   \n",
       "\n",
       "                                               title  \\\n",
       "0  Nanoscale X-Ray Imaging and Dynamics of Electr...   \n",
       "1  Strain-induced modification of nanoscale mater...   \n",
       "2                Magnetic Transition Metal Nanowires   \n",
       "\n",
       "                      active_year  start_year  \\\n",
       "0        [2018, 2019, 2020, 2021]        2018   \n",
       "1  [2014, 2015, 2016, 2017, 2018]        2014   \n",
       "2  [2009, 2010, 2011, 2012, 2013]        2009   \n",
       "\n",
       "                                   funding_org_name    end_date   project_num  \\\n",
       "0                   Office of Basic Energy Sciences  2021-12-14  DE-SC0001805   \n",
       "1  Directorate for Mathematical & Physical Sciences  2018-07-31       1411335   \n",
       "2  Directorate for Mathematical & Physical Sciences  2013-09-30       0906957   \n",
       "\n",
       "                                             funders  \n",
       "0  [{'id': 'grid.452988.a', 'types': ['Government...  \n",
       "1  [{'id': 'grid.457875.c', 'types': ['Government...  \n",
       "2  [{'id': 'grid.457875.c', 'types': ['Government...  "
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%dsldf\n",
    "\n",
    "search grants \n",
    "where resulting_publication_ids in [\"pub.1005269097\"]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "Collapsed": "false"
   },
   "source": [
    "## Conclusions\n",
    "\n",
    "Lists are a simple data structure that can have a great number of applications. \n",
    "\n",
    "When used in conjuction with the [DSL](https://docs.dimensions.ai/dsl/tour.html) language, they make it easy to concatenate the results of one query with another query e.g. in order to navigate through links available in Dimensions (from publications to grants, patents etc...). \n",
    "\n",
    "See also this [patents tutorial](https://api-lab.dimensions.ai/cookbooks/5-patents/1-Patents-referencing-a-Research-Organization.html) or this [clinical trials tutorial](https://api-lab.dimensions.ai/cookbooks/4-clinical-trials/Clinical_Trials_by_Volume_of_Pubs.html) for more in-depth applications of the queries discussed above."
   ]
  }
 ],
 "metadata": {
  "colab": {
   "name": "working with lists using the Dimensions API.ipynb",
   "provenance": [],
   "toc_visible": true
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  },
  "output_auto_scroll": false
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
